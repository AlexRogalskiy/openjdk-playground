{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"// openjdk-latest openjdk-latest \u00b6 Packages \u00b6 Name Summary [jvm root] dev.suresh dev.suresh.loom dev.suresh.loom.jetty dev.suresh.misc dev.suresh.mvn dev.suresh.server","title":"Home"},{"location":"#openjdk-latest","text":"","title":"openjdk-latest"},{"location":"#packages","text":"Name Summary [jvm root] dev.suresh dev.suresh.loom dev.suresh.loom.jetty dev.suresh.misc dev.suresh.mvn dev.suresh.server","title":"Packages"},{"location":"CHANGELOG/","text":"OpenJDK Playground Changelog \u00b6 Unreleased \u00b6 [1.0.0] \u00b6 Added \u00b6 Project Loom Sample Java15 examples Kotlin examples","title":"Release notes"},{"location":"CHANGELOG/#openjdk-playground-changelog","text":"","title":"OpenJDK Playground Changelog"},{"location":"CHANGELOG/#unreleased","text":"","title":"Unreleased"},{"location":"CHANGELOG/#100","text":"","title":"[1.0.0]"},{"location":"CHANGELOG/#added","text":"Project Loom Sample Java15 examples Kotlin examples","title":"Added"},{"location":"Containers/","text":"Containers \u00b6 Java Container logs \u00b6 $ docker run -it --rm --memory = 256m --cpus = 1 -v /:/host --name jdk-15 openjdk:15-jdk-slim java -Xlog:os = trace,os+container = trace -version Access Docker desktop LinuxKit VM on MacOS \u00b6 $ docker run -it --rm --memory = 256m --cpus = 1 -v /:/host --name alpine alpine /# chroot /host # docker version \u00b6 Netscat Webserver \u00b6 FROM alpine ENTRYPOINT while : ; do nc -k -l -p $PORT -e sh -c 'echo -e \"HTTP/1.1 200 OK\\n\\n hello, world\"' ; done # https://github.com/jamesward/hello-netcat # docker build -t hello-netcat . # docker run -p 8080:8080 -e PORT=8080 -it hello-netcat Forwards Logs # forward request and error logs to docker log collector RUN ln -sf /dev/stdout /var/log/nginx/access.log \\ && ln -sf /dev/stderr /var/log/nginx/error.log # OR output directly to /proc/self/fd/1 ( STDOUT ) /proc/self/fd/2 ( STDERR ) # https://docs.docker.com/config/containers/logging/configure/ Shutdown signals and EnytryPoint #!/bin/bash ## Entrypoint script for my-app. This script is to show how to write ## an entrypoint script that actually passes down signals from Docker. ## Load our DB Password into a runtime only Environment Variable if [ -f /run/secrets/password ] then echo \"Loading DB password from secrets file\" DB_PASS = $( cat /run/secrets/password ) export DB_PASS fi ## Run the Application exec my-app ENTRYPOINT [ \"../../myapp-entrypoint.sh\" ] Docker stats GraalVM app \u00b6 Kubernetes \u00b6 https://github.com/kubernetes-client/java \u00b6 https://github.com/fabric8io/kubernetes-client https://kubernetes.io/blog/2019/11/26/develop-a-kubernetes-controller-in-java/ https://github.com/ContainerSolutions/java-operator-sdk https://operatorhub.io/","title":"Containers"},{"location":"Containers/#containers","text":"","title":"Containers"},{"location":"Containers/#java-container-logs","text":"$ docker run -it --rm --memory = 256m --cpus = 1 -v /:/host --name jdk-15 openjdk:15-jdk-slim java -Xlog:os = trace,os+container = trace -version","title":"Java Container logs"},{"location":"Containers/#access-docker-desktop-linuxkit-vm-on-macos","text":"$ docker run -it --rm --memory = 256m --cpus = 1 -v /:/host --name alpine alpine /# chroot /host # docker version","title":"Access Docker desktop LinuxKit VM on MacOS"},{"location":"Containers/#_1","text":"","title":""},{"location":"Containers/#netscat-webserver","text":"FROM alpine ENTRYPOINT while : ; do nc -k -l -p $PORT -e sh -c 'echo -e \"HTTP/1.1 200 OK\\n\\n hello, world\"' ; done # https://github.com/jamesward/hello-netcat # docker build -t hello-netcat . # docker run -p 8080:8080 -e PORT=8080 -it hello-netcat Forwards Logs # forward request and error logs to docker log collector RUN ln -sf /dev/stdout /var/log/nginx/access.log \\ && ln -sf /dev/stderr /var/log/nginx/error.log # OR output directly to /proc/self/fd/1 ( STDOUT ) /proc/self/fd/2 ( STDERR ) # https://docs.docker.com/config/containers/logging/configure/ Shutdown signals and EnytryPoint #!/bin/bash ## Entrypoint script for my-app. This script is to show how to write ## an entrypoint script that actually passes down signals from Docker. ## Load our DB Password into a runtime only Environment Variable if [ -f /run/secrets/password ] then echo \"Loading DB password from secrets file\" DB_PASS = $( cat /run/secrets/password ) export DB_PASS fi ## Run the Application exec my-app ENTRYPOINT [ \"../../myapp-entrypoint.sh\" ]","title":"Netscat Webserver"},{"location":"Containers/#docker-stats-graalvm-app","text":"","title":"Docker stats GraalVM app"},{"location":"Containers/#kubernetes","text":"","title":"Kubernetes"},{"location":"Containers/#httpsgithubcomkubernetes-clientjava","text":"https://github.com/fabric8io/kubernetes-client https://kubernetes.io/blog/2019/11/26/develop-a-kubernetes-controller-in-java/ https://github.com/ContainerSolutions/java-operator-sdk https://operatorhub.io/","title":"https://github.com/kubernetes-client/java"},{"location":"JDK%20Commands/","text":"JDK Commands \u00b6 This document contains list of Java/JDK commands which i find useful for my day to day work. JDK Commands Java Commands 1. Create Source Code Structure 2. Preview features 3. Java Platform Module Systems (JPMS) 4. Disassembles a class 5. Parallel GC Kotlin Script Java Cryptography & Security \ud83d\udea8 Security Developer\u2019s Guide 1. Allow Unsafe Server Cert Change 2. Networking Proxy Gradle Kotlin DSL 1. Docs Gradle Kotlin DSL Samples Gradle Kotlin DSL Primer Migrating Guide to Kotlin DSL Building Kotlin JVM Libraries 2. Create new Java SourceSet 3. Custom SourceSet directories 4. Kotlin SourceSets 5. Configure/Create Tasks Eager Lazy (Confiuration Avoidance API) 6. Enabling Java preview feature 7. Reproducible builds 8. Multi Release Jar Maven Central Release Maven 1. Public Maven Repositories 2. Create a Project 3. Enabling Java preview feature 4. Reproducible Builds 5. Update Version number 6. Dependency Tree Microservices Starters 1. Micronaut 2. SpringBoot 3. Quarkus 4. Gradle Initializr 5. Maven Archetype Quickstart Misc 1. SDKMAN 2. jEnv 3. Codelabs 4. Typora 5. Github Actions Blogs Awesome Svgs Illustrations Background Icons Emojis Tools Java Commands \u00b6 1. Create Source Code Structure \u00b6 $ mkdir -p src/ { main,test } / { java,resources } 2. Preview features \u00b6 $ javac --enable-preview -release 15 Foo.java $ java --enable-preview Foo # JShell with preview feature enabled $ jshell --enable-preview JEP12 Preview Features Gradle - Enabling Java preview features 3. Java Platform Module Systems (JPMS) \u00b6 $ java --list-modules $ java --describe-module java.se $ java --show-module-resolution java.base 4. Disassembles a class \u00b6 $ javap -p -v <classfile> Javap Pastebin 5. Parallel GC \u00b6 bash $ java -XX:+UseParallelGC ... Scan deprecated APIs $ jdeprscan --release 14 app.jar -XX:+IgnoreUnrecognizedVMOptions -XX:MaxRAM=16g -XX:MaxGCPauseMillis=30 $ kotlinc -version -verbose -include-runtime -Xuse-ir -java-parameters -jvm-target 11 -api-version 1 .4 -language-version 1 .4 -progressive App.kt -d app.jar $ java -showversion -jar app.jar $ native-image --no-fallback --no-server -jar app.jar $ chmod +x app $ file app $ otool -L app $ objdump -section-headers app $ time ./app Kotlin Script \u00b6 #!/usr/bin/env -S kotlinc -script -- // sudo snap install --classic kotlin // ./hello.main.kts @file:DependsOn ( \"com.github.ajalt:clikt:2.8.0\" ) println ( \"Hello Kotlin Script\" ) JMC # https://adoptopenjdk.net/jmc.html # http://jdk.java.net/jmc/ # http://hirt.se/blog/?p=1196 # JDK should be in - /Library/Java/JavaVirtualMachines/jdk-14.0.2.jdk/Contents/Home/ $ curl https://ci.adoptopenjdk.net/view/JMC/job/jmc-build/job/master/lastSuccessfulBuild/artifact/target/products/org.openjdk.jmc-8.0.0-SNAPSHOT-macosx.cocoa.x86_64.tar.gz | tar xv - $ mv JDK \\ Mission \\ Control.app /Applications/ $ open '/Applications/JDK Mission Control.app' # To run with a JDK $ ./jmc -vm %JAVA_HOME% \\b in # or $ open '/Applications/JDK Mission Control.app' --args -vm $JAVA_HOME /bin Java Cryptography & Security \u00b6 \ud83d\udea8 Security Developer\u2019s Guide \u00b6 1. Allow Unsafe Server Cert Change \u00b6 bash // This is Unsafe. Don't use in prod. -Djdk.tls.allowUnsafeServerCertChange=true -Dsun.security.ssl.allowUnsafeRenegotiation=true https://github.com/sureshg/InstallCerts/blob/master/src/main/kotlin/io/github/sureshg/extn/Certs.kt // Force IPv4 -Djava.net.preferIPv4Stack = true // The entropy gathering device can also be specified with the system property -Djava.security.egd = file:/dev/./urandom 2. Networking Proxy \u00b6 HTTP http.proxyHost http.proxyPort http.nonProxyHosts Env vars export HTTP_PROXY = http://USERNAME:PASSWORD@10.0.1.1:8080/ export HTTPS_PROXY = https://USERNAME:PASSWORD@10.0.0.1:8080/ export NO_PROXY = master.hostname.example.com - Protocol Config Description HTTP http.proxyHost http.proxyPort http.nonProxyHosts java -Dhttp.proxyHost=webcache.example.com -Dhttp.proxyPort=8080 -Dhttp.nonProxyHosts=\u201dlocalhost|host.example.com\u201d GetURL HTTPS SOCKS /* The host name of the proxy server */ http.proxyHost /* The port number, the default value being 80 */ http.proxyPort /* '|' . The patterns may start or end with a '*' for wildcards. Any host matching one of these patterns will be reached through a direct connection instead of through a proxy */ http.nonProxyHosts Gradle Kotlin DSL \u00b6 1. Docs \u00b6 Gradle Kotlin DSL Samples \u00b6 Gradle Kotlin DSL Primer \u00b6 Migrating Guide to Kotlin DSL \u00b6 Building Kotlin JVM Libraries \u00b6 2. Create new Java SourceSet \u00b6 kotlin sourceSets { create(\"java15\") { java { srcDirs(\"src/main/java15\") } } } SourceSet 3. Custom SourceSet directories \u00b6 sourceSets { main { java { setSrcDirs ( listOf ( \"src\" )) } } test { java { setSrcDirs ( listOf ( \"test\" )) } } } 4. Kotlin SourceSets \u00b6 kotlin { sourceSets { main { kotlin . srcDirs ( \"...\" ) } test { kotlin . srcDirs ( \"...\" ) } create ( \"java11\" ) { kotlin . srcDirs ( \"src/main/java11\" ) } val test by creating {} } } // or sourceSets . main { withConvention ( KotlinSourceSet :: class ) { kotlin . srcDirs ( \"src/main/kotlin\" , \"src-gen/main/kotlin\" ) } } // Sources Jar val sourcesJar by tasks . registering ( Jar :: class ) { // kotlin.sourceSets.main.get().kotlin from ( sourceSets . main . get (). allSource ) archiveClassifier . set ( \"sources\" ) } 5. Configure/Create Tasks \u00b6 Eager \u00b6 val p : Jar = getByName < Jar >( \"jar\" ) // Get existing task val q : Jar = create < Jar >( \"jar\" ) {} // Create new task val r : Jar by getting ( Jar :: class ) // Get task using property delegate val s : Copy by creating ( Copy :: class ) {} // Create task using property delegate Lazy ( Confiuration Avoidance API ) \u00b6 val t : TaskProvider < Jar > = named < Jar >( \"jar\" ){} // Get existing task val u : TaskProvider < Jar > = register < Jar >( \"jar\" ){} // Create new task val v : TaskProvider < Jar > by registering ( Jar :: class ){} // Create task using property delegate val jar : TaskProvider < Task > by existing // Get task using property delegate val foo : FooTask by existing // Take Task type from val (Kotlin 1.4) val bar : BarTask by registering {} // Take Task type from val (Kotlin 1.4) 6. Enabling Java preview feature \u00b6 tasks . withType < JavaCompile > { options . compilerArgs . add ( \"--enable-preview\" ) } tasks . withType < Test > { jvmArgs ( \"--enable-preview\" ) } tasks . withType < JavaExec > { jvmArgs ( \"--enable-preview\" ) } 7. Reproducible builds \u00b6 withType < AbstractArchiveTask >(). configureEach { isPreserveFileTimestamps = false isReproducibleFileOrder = true } 8. Multi Release Jar \u00b6 // See https://github.com/melix/mrjar-gradle for more on multi release jars val mrVersion = \"11\" if ( JavaVersion . current (). isJava11Compatible ) { sourceSets { create ( \"java$mrVersion\" ) { java { srcDirs ( \"src/main/java$mrVersion\" ) } } } tasks { // For each source set, Gradle will automatically create a compile task. val mrJavaCompile = named < JavaCompile >( \"compileJava${mrVersion}Java\" ) { sourceCompatibility = mrVersion targetCompatibility = mrVersion options . compilerArgs = listOf ( \"--release\" , mrVersion ) } named < Jar >( \"jar\" ) { into ( \"META-INF/versions/$mrVersion\" ) { from ( sourceSets . named ( \"java$mrVersion\" ). get (). output ) } manifest . attributes ( \"Multi-Release\" to \"true\" ) dependsOn ( mrJavaCompile ) } } } $ ./gradlew dependencies --configuration implementation // Dependencies $ ./gradlew clean build --dry-run // Task Dependencies Maven Central Release \u00b6 https://github.com/sormuras/bach/blob/master/install-jdk.sh https://github.com/raphw/byte-buddy/blob/master/.github/workflows/main.yml#L92-L109 https://github.com/raphw/byte-buddy/blob/master/.github/scripts/install-jdk.sh https://blog.autsoft.hu/publishing-an-android-library-to-mavencentral-in-2019/ * Maven \u00b6 1. Public Maven Repositories \u00b6 https://mvnrepository.com/repos https://maven.google.com/web/index.html 2. Create a Project \u00b6 $ mvn archetype:generate -DgroupId = dev.suresh -DartifactId = my-app -DarchetypeArtifactId = maven-archetype-quickstart -DarchetypeVersion = 1 .4 -DinteractiveMode = false 3. Enabling Java preview feature \u00b6 <build> <plugins> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-compiler-plugin </artifactId> <version> 3.6.2 </version> <configuration> <release> 15 </release> <compilerArg> --enable-preview </compilerArg> </configuration> </plugin> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-surefire-plugin </artifactId> <configuration> <argLine> --enable-preview </argLine> </configuration> </plugin> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-failsafe-plugin </artifactId> <configuration> <argLine> --enable-preview </argLine> </configuration> </plugin> </plugins> </build> 4. Reproducible Builds \u00b6 <properties> <project.build.outputTimestamp> 2020-04-02T08:04:00Z </project.build.outputTimestamp> <project.build.sourceEncoding> UTF-8 </project.build.sourceEncoding> </properties> 5. Update Version number \u00b6 $ ./mvnw versions:set -DnewVersion = 1 .0.1 -DprocessAllModules -DgenerateBackupPoms = false $ ./mvnw versions:revert // Rollback $ ./mvnw versions:commit 6. Dependency Tree \u00b6 # Show all orginal versions, not the resolved ones. $ ./mvnw dependency:tree -Dverbose -Dincludes = org.jetbrains.kotlin:kotlin-stdlib $ ./mvnw clean verify # Search Artifacts by class https://search.maven.org/search?q = fc:kotlin.text.Regex Microservices Starters \u00b6 1. Micronaut \u00b6 $ curl https://launch.micronaut.io/demo.zip -o demo.zip $ unzip demo.zip -d demo && cd demo && ./gradlew run --continuous --watch-fs // OR $ curl 'https://launch.micronaut.io/create/DEFAULT/dev.suresh.sample-app?lang=kotlin&build=gradle&test=junit&javaVersion=JDK_11&features=http-client&features=data-jdbc&features=jdbc-hikari&features=kotlin-extension-functions&features=graalvm' \\ --compressed \\ -o sample-app.zip 2. SpringBoot \u00b6 $ curl https://start.spring.io/starter.zip \\ -d dependencies = devtools,web \\ -d type = gradle-project \\ -d language = kotlin \\ -d javaVersion = 11 \\ -d packaging = jar \\ -d platformVersion = 2 .2.6.RELEASE \\ -d name = helloworld \\ -d groupId = dev.suresh \\ -d artifactId = helloworld \\ -d packageName = dev.suresh \\ -d description = Hello%20World%20App \\ -d baseDir = helloworld \\ -o helloworld.zip SpringBoot Spring and Kotlin Docs 3. Quarkus \u00b6 4. Gradle Initializr \u00b6 $ curl 'https://gradle-initializr.cleverapps.io/starter?type=kotlin-application&testFramework=&dsl=kotlin&gradleVersion=6.3&archive=zip&projectName=helloworld-kotlin&packageName=dev.suresh&generate-project=' --compressed -o helloworld-kotlin.zip // OR $ gradle init --type <java-library | java-application | ...> --dsl kotlin 5. Maven Archetype Quickstart \u00b6 $ mvn archetype:generate -DgroupId = dev.suresh -DartifactId = my-app -DarchetypeArtifactId = maven-archetype-quickstart -DarchetypeVersion = 1 .4 -DinteractiveMode = false Misc \u00b6 1. SDKMAN \u00b6 2. jEnv \u00b6 3. Codelabs \u00b6 4. Typora \u00b6 5. Github Actions \u00b6 Github Actions For Java Github Maven Package Workflow Syntax Env Variables Expressions Syntax & Contexts Workflow Commands Share Data Between Jobs Encrypted Secrets Docker Action GITHUB_TOKEN Awesome Actions bash // Set env variable than can access from workflow env context. echo \"::set-env name=JAVA_HOME::$GRAALVM_HOME\" Release Action Release-draft action Release/* Cache - uses : actions/cache@v1 with : path : ~/.m2/repository key : ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }} restore-keys : | ${{ runner.os }}-maven- - uses : actions/cache@v1 with : path : ~/.gradle/caches key : ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }} restore-keys : | ${{ runner.os }}-gradle- String format ${ { hashFiles(format( '{0}{1}' , github.workspace, '/test.lock' )) } } Use outout between steps - name : Get cache directory id : app-cache run : | echo \"::set-output name=dir::$(command --cache-dir)\" - uses : actions/cache@v1 with : path : ${{ steps.app-cache.outputs.dir }} Check runner OS if : startsWith(runner.os, 'Linux') if : startsWith(runner.os, 'macOS') if : startsWith(runner.os, 'Windows') // check if security bot $ if : github.base_ref == 'master' && github.actor == 'dependabot[bot]' Docker hub push - https://github.com/marketplace/actions/build-and-push-docker-images Github Registry $ VERSION = $( date +%s ) $ docker build . --file Dockerfile --tag docker.pkg.github.com/sureshg/repo/app: ${ VERSION } $ docker login docker.pkg.github.com --username sureshg --password ${ { secrets.GITHUB_TOKEN } } $ docker push docker.pkg.github.com/sureshg/repo/app: ${ VERSION } Service container services : postgres : image : postgres:10.8 env : POSTGRES_USER : postgres POSTGRES_PASSWORD : postgres options : ports : - 5432/tcp ... ${{ jobs.services.postgres.ports[5432] }} Dart Dev_dependency Build_version Build_runner Create extension repo. pub run build_runner build pub run build_runner watch pedantic Json Dep: json_annotations Dev: json_serializable Value Build_value Build_collections Build_cli_annotations Build_cli Source_gen Yaml checked_yaml https://github.com/GoogleContainerTools/distroless https://github.com/GoogleContainerTools/jib Native-Image package com.newrelic.jfr.subst ; import com.oracle.svm.core.annotate.Substitute ; import com.oracle.svm.core.annotate.TargetClass ; @TargetClass ( className = \"jdk.jfr.internal.JVM\" ) final class Target_jdk_jfr_internal_JVM { @Substitute public long getTypeId ( Class <?> clazz ) { return - 1 ; } } // Another example @TargetClass ( className = \"com.google.protobuf.UnsafeUtil\" ) final class Target_com_google_protobuf_UnsafeUtil { @Substitute static sun . misc . Unsafe getUnsafe () { return null ; } } <dependency> <groupId> org.graalvm.nativeimage </groupId> <artifactId> svm </artifactId> <version> ${graalvm.version} </version> <scope> provided </scope> </dependency> Find GraalVm used to generate the native-image $ strings -a $( which native-image ) | grep -i com.oracle.svm.core.VM Maven integration - https://www.graalvm.org/docs/reference-manual/native-image/#integration-with-maven Image configure at build and runtime - https://github.com/graalvm/graalvm-demos/tree/master/native-image-configure-examples GraalVm demos - https://github.com/graalvm/graalvm-demos https://medium.com/graalvm/simplifying-native-image-generation-with-maven-plugin-and-embeddable-configuration-d5b283b92f57 https://github.com/oracle/graal/blob/master/substratevm/CLASS-INITIALIZATION.md https://search.maven.org/artifact/org.graalvm.nativeimage/svm/20.0.0/jar https://github.com/graalvm/graalvm-ce-dev-builds/releases/ Examples: https://github.com/38leinaD/bpmn-diff/tree/master/.github/workflows https://github.com/micronaut-projects/micronaut-starter/tree/master/.github/workflows https://jamesward.com/2020/05/07/graalvm-native-image-tips-tricks/ Blogs \u00b6 https://www.marcobehler.com/guides/jdbc https://www.marcobehler.com/guides/java-databases https://vladmihalcea.com/jdbc-driver-maven-dependency/ https://vladmihalcea.com/jdbc-driver-connection-url-strings/ Tools https://utteranc.es/ - Comments Widgets https://orchid.run/wiki/learn/tutorials/how-to-document-kotlin http://casual-effects.com/markdeep/ https://www.mkdocs.org/ (eg: https://github.com/hexagonkt/hexagon/tree/master/hexagon_site ) Github publish example - https://github.com/hexagonkt/hexagon/blob/master/.github/workflows/main.yml * Awesome Svgs \u00b6 Illustrations \u00b6 https://undraw.co/illustrations https://www.manypixels.co/gallery/ https://www.pixeltrue.com/free-illustrations Background \u00b6 https://www.svgbackgrounds.com/ Icons \u00b6 https://icons.getbootstrap.com/ https://material.io/resources/icons/?style=baseline (not sag) https://fontawesome.com/v4.7.0/icons/ (not sag) https://simpleicons.org/ (Brand Icons - good one) https://systemuicons.com/ https://www.visiwig.com/icons/ https://standart.io/ https://thenounproject.com/ https://www.flaticon.com/ https://ionicons.com/ Emojis \u00b6 https://emojipedia.org/search/ https://github.com/twitter/twemoji/tree/master/assets Tools \u00b6 https://jakearchibald.github.io/svgomg/ https://css-tricks.com/tools-for-optimizing-svg/ https://imageoptim.com/mac https://xmlgraphics.apache.org/batik/ https://github.com/svg/svgo-osx-folder-action $ pip3 install mkdocs-macros-plugin $ ./gradlew dokka $ cp docs/mkdocs.yml build/dokka $ cp -R docs/images build/dokka/my-app $ cp CHANGELOG.md build/dokka/my-app/CHANGELOG.md $ cp README.md build/dokka/my-app/Overview.md $ Fix the img reference on Overview.md $ cd build/dokka $ mkdocs build","title":"JDK Commands"},{"location":"JDK%20Commands/#jdk-commands","text":"This document contains list of Java/JDK commands which i find useful for my day to day work. JDK Commands Java Commands 1. Create Source Code Structure 2. Preview features 3. Java Platform Module Systems (JPMS) 4. Disassembles a class 5. Parallel GC Kotlin Script Java Cryptography & Security \ud83d\udea8 Security Developer\u2019s Guide 1. Allow Unsafe Server Cert Change 2. Networking Proxy Gradle Kotlin DSL 1. Docs Gradle Kotlin DSL Samples Gradle Kotlin DSL Primer Migrating Guide to Kotlin DSL Building Kotlin JVM Libraries 2. Create new Java SourceSet 3. Custom SourceSet directories 4. Kotlin SourceSets 5. Configure/Create Tasks Eager Lazy (Confiuration Avoidance API) 6. Enabling Java preview feature 7. Reproducible builds 8. Multi Release Jar Maven Central Release Maven 1. Public Maven Repositories 2. Create a Project 3. Enabling Java preview feature 4. Reproducible Builds 5. Update Version number 6. Dependency Tree Microservices Starters 1. Micronaut 2. SpringBoot 3. Quarkus 4. Gradle Initializr 5. Maven Archetype Quickstart Misc 1. SDKMAN 2. jEnv 3. Codelabs 4. Typora 5. Github Actions Blogs Awesome Svgs Illustrations Background Icons Emojis Tools","title":"JDK Commands"},{"location":"JDK%20Commands/#java-commands","text":"","title":"Java Commands"},{"location":"JDK%20Commands/#1-create-source-code-structure","text":"$ mkdir -p src/ { main,test } / { java,resources }","title":"1. Create Source Code Structure"},{"location":"JDK%20Commands/#2-preview-features","text":"$ javac --enable-preview -release 15 Foo.java $ java --enable-preview Foo # JShell with preview feature enabled $ jshell --enable-preview JEP12 Preview Features Gradle - Enabling Java preview features","title":"2. Preview features"},{"location":"JDK%20Commands/#3-java-platform-module-systems-jpms","text":"$ java --list-modules $ java --describe-module java.se $ java --show-module-resolution java.base","title":"3. Java Platform Module Systems (JPMS)"},{"location":"JDK%20Commands/#4-disassembles-a-class","text":"$ javap -p -v <classfile> Javap Pastebin","title":"4. Disassembles a class"},{"location":"JDK%20Commands/#5-parallel-gc","text":"bash $ java -XX:+UseParallelGC ... Scan deprecated APIs $ jdeprscan --release 14 app.jar -XX:+IgnoreUnrecognizedVMOptions -XX:MaxRAM=16g -XX:MaxGCPauseMillis=30 $ kotlinc -version -verbose -include-runtime -Xuse-ir -java-parameters -jvm-target 11 -api-version 1 .4 -language-version 1 .4 -progressive App.kt -d app.jar $ java -showversion -jar app.jar $ native-image --no-fallback --no-server -jar app.jar $ chmod +x app $ file app $ otool -L app $ objdump -section-headers app $ time ./app","title":"5. Parallel GC"},{"location":"JDK%20Commands/#kotlin-script","text":"#!/usr/bin/env -S kotlinc -script -- // sudo snap install --classic kotlin // ./hello.main.kts @file:DependsOn ( \"com.github.ajalt:clikt:2.8.0\" ) println ( \"Hello Kotlin Script\" ) JMC # https://adoptopenjdk.net/jmc.html # http://jdk.java.net/jmc/ # http://hirt.se/blog/?p=1196 # JDK should be in - /Library/Java/JavaVirtualMachines/jdk-14.0.2.jdk/Contents/Home/ $ curl https://ci.adoptopenjdk.net/view/JMC/job/jmc-build/job/master/lastSuccessfulBuild/artifact/target/products/org.openjdk.jmc-8.0.0-SNAPSHOT-macosx.cocoa.x86_64.tar.gz | tar xv - $ mv JDK \\ Mission \\ Control.app /Applications/ $ open '/Applications/JDK Mission Control.app' # To run with a JDK $ ./jmc -vm %JAVA_HOME% \\b in # or $ open '/Applications/JDK Mission Control.app' --args -vm $JAVA_HOME /bin","title":"Kotlin Script"},{"location":"JDK%20Commands/#java-cryptography-security","text":"","title":"Java Cryptography &amp; Security"},{"location":"JDK%20Commands/#security-developers-guide","text":"","title":"\ud83d\udea8 Security Developer\u2019s Guide"},{"location":"JDK%20Commands/#1-allow-unsafe-server-cert-change","text":"bash // This is Unsafe. Don't use in prod. -Djdk.tls.allowUnsafeServerCertChange=true -Dsun.security.ssl.allowUnsafeRenegotiation=true https://github.com/sureshg/InstallCerts/blob/master/src/main/kotlin/io/github/sureshg/extn/Certs.kt // Force IPv4 -Djava.net.preferIPv4Stack = true // The entropy gathering device can also be specified with the system property -Djava.security.egd = file:/dev/./urandom","title":"1. Allow Unsafe Server Cert Change"},{"location":"JDK%20Commands/#2-networking-proxy","text":"HTTP http.proxyHost http.proxyPort http.nonProxyHosts Env vars export HTTP_PROXY = http://USERNAME:PASSWORD@10.0.1.1:8080/ export HTTPS_PROXY = https://USERNAME:PASSWORD@10.0.0.1:8080/ export NO_PROXY = master.hostname.example.com - Protocol Config Description HTTP http.proxyHost http.proxyPort http.nonProxyHosts java -Dhttp.proxyHost=webcache.example.com -Dhttp.proxyPort=8080 -Dhttp.nonProxyHosts=\u201dlocalhost|host.example.com\u201d GetURL HTTPS SOCKS /* The host name of the proxy server */ http.proxyHost /* The port number, the default value being 80 */ http.proxyPort /* '|' . The patterns may start or end with a '*' for wildcards. Any host matching one of these patterns will be reached through a direct connection instead of through a proxy */ http.nonProxyHosts","title":"2. Networking Proxy"},{"location":"JDK%20Commands/#gradle-kotlin-dsl","text":"","title":"Gradle Kotlin DSL"},{"location":"JDK%20Commands/#1-docs","text":"","title":"1. Docs"},{"location":"JDK%20Commands/#gradle-kotlin-dsl-samples","text":"","title":"Gradle Kotlin DSL Samples"},{"location":"JDK%20Commands/#gradle-kotlin-dsl-primer","text":"","title":"Gradle Kotlin DSL Primer"},{"location":"JDK%20Commands/#migrating-guide-to-kotlin-dsl","text":"","title":"Migrating Guide to Kotlin DSL"},{"location":"JDK%20Commands/#building-kotlin-jvm-libraries","text":"","title":"Building Kotlin JVM Libraries"},{"location":"JDK%20Commands/#2-create-new-java-sourceset","text":"kotlin sourceSets { create(\"java15\") { java { srcDirs(\"src/main/java15\") } } } SourceSet","title":"2. Create new Java SourceSet"},{"location":"JDK%20Commands/#3-custom-sourceset-directories","text":"sourceSets { main { java { setSrcDirs ( listOf ( \"src\" )) } } test { java { setSrcDirs ( listOf ( \"test\" )) } } }","title":"3. Custom SourceSet directories"},{"location":"JDK%20Commands/#4-kotlin-sourcesets","text":"kotlin { sourceSets { main { kotlin . srcDirs ( \"...\" ) } test { kotlin . srcDirs ( \"...\" ) } create ( \"java11\" ) { kotlin . srcDirs ( \"src/main/java11\" ) } val test by creating {} } } // or sourceSets . main { withConvention ( KotlinSourceSet :: class ) { kotlin . srcDirs ( \"src/main/kotlin\" , \"src-gen/main/kotlin\" ) } } // Sources Jar val sourcesJar by tasks . registering ( Jar :: class ) { // kotlin.sourceSets.main.get().kotlin from ( sourceSets . main . get (). allSource ) archiveClassifier . set ( \"sources\" ) }","title":"4. Kotlin SourceSets"},{"location":"JDK%20Commands/#5-configurecreate-tasks","text":"","title":"5. Configure/Create Tasks"},{"location":"JDK%20Commands/#eager","text":"val p : Jar = getByName < Jar >( \"jar\" ) // Get existing task val q : Jar = create < Jar >( \"jar\" ) {} // Create new task val r : Jar by getting ( Jar :: class ) // Get task using property delegate val s : Copy by creating ( Copy :: class ) {} // Create task using property delegate","title":"Eager"},{"location":"JDK%20Commands/#lazy-confiuration-avoidance-api","text":"val t : TaskProvider < Jar > = named < Jar >( \"jar\" ){} // Get existing task val u : TaskProvider < Jar > = register < Jar >( \"jar\" ){} // Create new task val v : TaskProvider < Jar > by registering ( Jar :: class ){} // Create task using property delegate val jar : TaskProvider < Task > by existing // Get task using property delegate val foo : FooTask by existing // Take Task type from val (Kotlin 1.4) val bar : BarTask by registering {} // Take Task type from val (Kotlin 1.4)","title":"Lazy (Confiuration Avoidance API)"},{"location":"JDK%20Commands/#6-enabling-java-preview-feature","text":"tasks . withType < JavaCompile > { options . compilerArgs . add ( \"--enable-preview\" ) } tasks . withType < Test > { jvmArgs ( \"--enable-preview\" ) } tasks . withType < JavaExec > { jvmArgs ( \"--enable-preview\" ) }","title":"6. Enabling Java preview feature"},{"location":"JDK%20Commands/#7-reproducible-builds","text":"withType < AbstractArchiveTask >(). configureEach { isPreserveFileTimestamps = false isReproducibleFileOrder = true }","title":"7. Reproducible builds"},{"location":"JDK%20Commands/#8-multi-release-jar","text":"// See https://github.com/melix/mrjar-gradle for more on multi release jars val mrVersion = \"11\" if ( JavaVersion . current (). isJava11Compatible ) { sourceSets { create ( \"java$mrVersion\" ) { java { srcDirs ( \"src/main/java$mrVersion\" ) } } } tasks { // For each source set, Gradle will automatically create a compile task. val mrJavaCompile = named < JavaCompile >( \"compileJava${mrVersion}Java\" ) { sourceCompatibility = mrVersion targetCompatibility = mrVersion options . compilerArgs = listOf ( \"--release\" , mrVersion ) } named < Jar >( \"jar\" ) { into ( \"META-INF/versions/$mrVersion\" ) { from ( sourceSets . named ( \"java$mrVersion\" ). get (). output ) } manifest . attributes ( \"Multi-Release\" to \"true\" ) dependsOn ( mrJavaCompile ) } } } $ ./gradlew dependencies --configuration implementation // Dependencies $ ./gradlew clean build --dry-run // Task Dependencies","title":"8. Multi Release Jar"},{"location":"JDK%20Commands/#maven-central-release","text":"https://github.com/sormuras/bach/blob/master/install-jdk.sh https://github.com/raphw/byte-buddy/blob/master/.github/workflows/main.yml#L92-L109 https://github.com/raphw/byte-buddy/blob/master/.github/scripts/install-jdk.sh https://blog.autsoft.hu/publishing-an-android-library-to-mavencentral-in-2019/ *","title":"Maven Central Release"},{"location":"JDK%20Commands/#maven","text":"","title":"Maven"},{"location":"JDK%20Commands/#1-public-maven-repositories","text":"https://mvnrepository.com/repos https://maven.google.com/web/index.html","title":"1. Public Maven Repositories"},{"location":"JDK%20Commands/#2-create-a-project","text":"$ mvn archetype:generate -DgroupId = dev.suresh -DartifactId = my-app -DarchetypeArtifactId = maven-archetype-quickstart -DarchetypeVersion = 1 .4 -DinteractiveMode = false","title":"2. Create a Project"},{"location":"JDK%20Commands/#3-enabling-java-preview-feature","text":"<build> <plugins> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-compiler-plugin </artifactId> <version> 3.6.2 </version> <configuration> <release> 15 </release> <compilerArg> --enable-preview </compilerArg> </configuration> </plugin> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-surefire-plugin </artifactId> <configuration> <argLine> --enable-preview </argLine> </configuration> </plugin> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-failsafe-plugin </artifactId> <configuration> <argLine> --enable-preview </argLine> </configuration> </plugin> </plugins> </build>","title":"3. Enabling Java preview feature"},{"location":"JDK%20Commands/#4-reproducible-builds","text":"<properties> <project.build.outputTimestamp> 2020-04-02T08:04:00Z </project.build.outputTimestamp> <project.build.sourceEncoding> UTF-8 </project.build.sourceEncoding> </properties>","title":"4. Reproducible Builds"},{"location":"JDK%20Commands/#5-update-version-number","text":"$ ./mvnw versions:set -DnewVersion = 1 .0.1 -DprocessAllModules -DgenerateBackupPoms = false $ ./mvnw versions:revert // Rollback $ ./mvnw versions:commit","title":"5. Update Version number"},{"location":"JDK%20Commands/#6-dependency-tree","text":"# Show all orginal versions, not the resolved ones. $ ./mvnw dependency:tree -Dverbose -Dincludes = org.jetbrains.kotlin:kotlin-stdlib $ ./mvnw clean verify # Search Artifacts by class https://search.maven.org/search?q = fc:kotlin.text.Regex","title":"6. Dependency Tree"},{"location":"JDK%20Commands/#microservices-starters","text":"","title":"Microservices Starters"},{"location":"JDK%20Commands/#1-micronaut","text":"$ curl https://launch.micronaut.io/demo.zip -o demo.zip $ unzip demo.zip -d demo && cd demo && ./gradlew run --continuous --watch-fs // OR $ curl 'https://launch.micronaut.io/create/DEFAULT/dev.suresh.sample-app?lang=kotlin&build=gradle&test=junit&javaVersion=JDK_11&features=http-client&features=data-jdbc&features=jdbc-hikari&features=kotlin-extension-functions&features=graalvm' \\ --compressed \\ -o sample-app.zip","title":"1. Micronaut"},{"location":"JDK%20Commands/#2-springboot","text":"$ curl https://start.spring.io/starter.zip \\ -d dependencies = devtools,web \\ -d type = gradle-project \\ -d language = kotlin \\ -d javaVersion = 11 \\ -d packaging = jar \\ -d platformVersion = 2 .2.6.RELEASE \\ -d name = helloworld \\ -d groupId = dev.suresh \\ -d artifactId = helloworld \\ -d packageName = dev.suresh \\ -d description = Hello%20World%20App \\ -d baseDir = helloworld \\ -o helloworld.zip SpringBoot Spring and Kotlin Docs","title":"2. SpringBoot"},{"location":"JDK%20Commands/#3-quarkus","text":"","title":"3. Quarkus"},{"location":"JDK%20Commands/#4-gradle-initializr","text":"$ curl 'https://gradle-initializr.cleverapps.io/starter?type=kotlin-application&testFramework=&dsl=kotlin&gradleVersion=6.3&archive=zip&projectName=helloworld-kotlin&packageName=dev.suresh&generate-project=' --compressed -o helloworld-kotlin.zip // OR $ gradle init --type <java-library | java-application | ...> --dsl kotlin","title":"4. Gradle Initializr"},{"location":"JDK%20Commands/#5-maven-archetype-quickstart","text":"$ mvn archetype:generate -DgroupId = dev.suresh -DartifactId = my-app -DarchetypeArtifactId = maven-archetype-quickstart -DarchetypeVersion = 1 .4 -DinteractiveMode = false","title":"5. Maven Archetype Quickstart"},{"location":"JDK%20Commands/#misc","text":"","title":"Misc"},{"location":"JDK%20Commands/#1-sdkman","text":"","title":"1. SDKMAN"},{"location":"JDK%20Commands/#2-jenv","text":"","title":"2. jEnv"},{"location":"JDK%20Commands/#3-codelabs","text":"","title":"3. Codelabs"},{"location":"JDK%20Commands/#4-typora","text":"","title":"4. Typora"},{"location":"JDK%20Commands/#5-github-actions","text":"Github Actions For Java Github Maven Package Workflow Syntax Env Variables Expressions Syntax & Contexts Workflow Commands Share Data Between Jobs Encrypted Secrets Docker Action GITHUB_TOKEN Awesome Actions bash // Set env variable than can access from workflow env context. echo \"::set-env name=JAVA_HOME::$GRAALVM_HOME\" Release Action Release-draft action Release/* Cache - uses : actions/cache@v1 with : path : ~/.m2/repository key : ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }} restore-keys : | ${{ runner.os }}-maven- - uses : actions/cache@v1 with : path : ~/.gradle/caches key : ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }} restore-keys : | ${{ runner.os }}-gradle- String format ${ { hashFiles(format( '{0}{1}' , github.workspace, '/test.lock' )) } } Use outout between steps - name : Get cache directory id : app-cache run : | echo \"::set-output name=dir::$(command --cache-dir)\" - uses : actions/cache@v1 with : path : ${{ steps.app-cache.outputs.dir }} Check runner OS if : startsWith(runner.os, 'Linux') if : startsWith(runner.os, 'macOS') if : startsWith(runner.os, 'Windows') // check if security bot $ if : github.base_ref == 'master' && github.actor == 'dependabot[bot]' Docker hub push - https://github.com/marketplace/actions/build-and-push-docker-images Github Registry $ VERSION = $( date +%s ) $ docker build . --file Dockerfile --tag docker.pkg.github.com/sureshg/repo/app: ${ VERSION } $ docker login docker.pkg.github.com --username sureshg --password ${ { secrets.GITHUB_TOKEN } } $ docker push docker.pkg.github.com/sureshg/repo/app: ${ VERSION } Service container services : postgres : image : postgres:10.8 env : POSTGRES_USER : postgres POSTGRES_PASSWORD : postgres options : ports : - 5432/tcp ... ${{ jobs.services.postgres.ports[5432] }} Dart Dev_dependency Build_version Build_runner Create extension repo. pub run build_runner build pub run build_runner watch pedantic Json Dep: json_annotations Dev: json_serializable Value Build_value Build_collections Build_cli_annotations Build_cli Source_gen Yaml checked_yaml https://github.com/GoogleContainerTools/distroless https://github.com/GoogleContainerTools/jib Native-Image package com.newrelic.jfr.subst ; import com.oracle.svm.core.annotate.Substitute ; import com.oracle.svm.core.annotate.TargetClass ; @TargetClass ( className = \"jdk.jfr.internal.JVM\" ) final class Target_jdk_jfr_internal_JVM { @Substitute public long getTypeId ( Class <?> clazz ) { return - 1 ; } } // Another example @TargetClass ( className = \"com.google.protobuf.UnsafeUtil\" ) final class Target_com_google_protobuf_UnsafeUtil { @Substitute static sun . misc . Unsafe getUnsafe () { return null ; } } <dependency> <groupId> org.graalvm.nativeimage </groupId> <artifactId> svm </artifactId> <version> ${graalvm.version} </version> <scope> provided </scope> </dependency> Find GraalVm used to generate the native-image $ strings -a $( which native-image ) | grep -i com.oracle.svm.core.VM Maven integration - https://www.graalvm.org/docs/reference-manual/native-image/#integration-with-maven Image configure at build and runtime - https://github.com/graalvm/graalvm-demos/tree/master/native-image-configure-examples GraalVm demos - https://github.com/graalvm/graalvm-demos https://medium.com/graalvm/simplifying-native-image-generation-with-maven-plugin-and-embeddable-configuration-d5b283b92f57 https://github.com/oracle/graal/blob/master/substratevm/CLASS-INITIALIZATION.md https://search.maven.org/artifact/org.graalvm.nativeimage/svm/20.0.0/jar https://github.com/graalvm/graalvm-ce-dev-builds/releases/ Examples: https://github.com/38leinaD/bpmn-diff/tree/master/.github/workflows https://github.com/micronaut-projects/micronaut-starter/tree/master/.github/workflows https://jamesward.com/2020/05/07/graalvm-native-image-tips-tricks/","title":"5. Github Actions"},{"location":"JDK%20Commands/#blogs","text":"https://www.marcobehler.com/guides/jdbc https://www.marcobehler.com/guides/java-databases https://vladmihalcea.com/jdbc-driver-maven-dependency/ https://vladmihalcea.com/jdbc-driver-connection-url-strings/ Tools https://utteranc.es/ - Comments Widgets https://orchid.run/wiki/learn/tutorials/how-to-document-kotlin http://casual-effects.com/markdeep/ https://www.mkdocs.org/ (eg: https://github.com/hexagonkt/hexagon/tree/master/hexagon_site ) Github publish example - https://github.com/hexagonkt/hexagon/blob/master/.github/workflows/main.yml *","title":"Blogs"},{"location":"JDK%20Commands/#awesome-svgs","text":"","title":"Awesome Svgs"},{"location":"JDK%20Commands/#illustrations","text":"https://undraw.co/illustrations https://www.manypixels.co/gallery/ https://www.pixeltrue.com/free-illustrations","title":"Illustrations"},{"location":"JDK%20Commands/#background","text":"https://www.svgbackgrounds.com/","title":"Background"},{"location":"JDK%20Commands/#icons","text":"https://icons.getbootstrap.com/ https://material.io/resources/icons/?style=baseline (not sag) https://fontawesome.com/v4.7.0/icons/ (not sag) https://simpleicons.org/ (Brand Icons - good one) https://systemuicons.com/ https://www.visiwig.com/icons/ https://standart.io/ https://thenounproject.com/ https://www.flaticon.com/ https://ionicons.com/","title":"Icons"},{"location":"JDK%20Commands/#emojis","text":"https://emojipedia.org/search/ https://github.com/twitter/twemoji/tree/master/assets","title":"Emojis"},{"location":"JDK%20Commands/#tools","text":"https://jakearchibald.github.io/svgomg/ https://css-tricks.com/tools-for-optimizing-svg/ https://imageoptim.com/mac https://xmlgraphics.apache.org/batik/ https://github.com/svg/svgo-osx-folder-action $ pip3 install mkdocs-macros-plugin $ ./gradlew dokka $ cp docs/mkdocs.yml build/dokka $ cp -R docs/images build/dokka/my-app $ cp CHANGELOG.md build/dokka/my-app/CHANGELOG.md $ cp README.md build/dokka/my-app/Overview.md $ Fix the img reference on Overview.md $ cd build/dokka $ mkdocs build","title":"Tools"},{"location":"JDK-Commands-to-edit/","text":"// Check the module dependencies. $ jdeps \u2013jdk-internals build/libs/xxxxx.jar // Jlink Commands $ jlink \u2013compress=2 \u2013strip-debug \u2013no-header-files \u2013no-man-pages \u2013add-modules java.base,jdk.jfr \u2013module-path jmods \u2013output custom-jre // Common options. -Xms128m -Xmx2048m -ea -XX:+UseCompressedOops -Dfile.encoding=UTF-8 -Djava.net.preferIPv4Stack=true -Djava.security.egd=file:/dev/./urandom // Heap dump -XX:+HeapDumpOnOutOfMemoryError -XX:ErrorFile= \\(USER_HOME/java_error_in_app_%p.log -XX:HeapDumpPath=\\) USER_HOME/java_error_in_app.hprof // G1GC and GCLogs -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:InitiatingHeapOccupancyPercent=70 -XX:+PrintGC -XX:+PrintGCDateStamps -XX:+PrintGCDetails -Xloggc:/log/gclogs/app-gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=15 -XX:GCLogFileSize=10M // Helpful NPE $ java -XX:+ShowCodeDetailsInExceptionMessages Main.java // -g enables debugging info (like local var name) $ javac -g Main.java $ java -XX:+ShowCodeDetailsInExceptionMessages Main // ZGC $ java -XX:+UnlockExperimentalVMOptions -XX:+UseZGC // NUMA $ java -XX:+UseNUMA // JVMCI (Graal) Compiler $ java -XX:+UnlockExperimentalVMOptions -XX:+UseJVMCICompiler // JFR // CDS // Remote Debugging $ java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 // Loom $ -Djdk.tracePinnedThreads=full -Djdk.defaultScheduler.parallelism=2 -Djdk.defaultScheduler.lifo=false (FIFO by default) // Build Tools $ ./gradlew wrapper \u2013gradle-version=6.1 \u2013distribution-type=bin $ ./gradlew clean dependencyUpdates -Drevision=release $ ./gradlew properties $ mvn -N io.takari:maven:wrapper -Dmaven = 3 .6.3 $ ./mvnw dependency:tree $ ./mvnw dependency:tree -Ddetail = true $ ./mvnw dependency:tree -Dverbose -Dincludes = org.jetbrains.kotlin:kotlin-stdlib $ ./mvnw clean versions:display-dependency-updates versions:display-plugin-updates $ ./mvnw clean verify List maven deps \u00b6 $ ./mvnw -B -DoutputFile=target/deps.txt -DskipTests clean dependency:list install // JCmd commandds $ jcmd -l // List all java process (or JPS) $ jcmd // Get all properties $ jcmd Thread.print // Thread Dump $ jcmd VM.system_properties $ jcmd VM.command_line $ jcmd VM.flags // #### Print All VM Options ##### // -XX:+PrintFlagsWithComments - For debug builds $ java -XX:+PrintFlagsFinal -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -version // Java Mission control (AdoptOpenJDk) // Requires java 1.8 $ cd ~/install/openjdk/JMC/JDK Mission Control.app/Contents/MacOS $ ./jmc -vm $JAVA_HOME/bin or $ open JDK Mission Control.app \u2013args -vm ~/.jenv/versions/1.8/bin GraalVM Options (Native Image) \u00b6 // Install native-image $ gu install native-image ruby R python // Compiler Graphs $ java -Dgraal.Dump=:3 -Dgraal.PrintGraph=Network -jar app.jar // Build PGO enabled binary $ /graal-xxx/bin/java -Dgraal.PGOInstrument=myclass.iprof MyClass $ native-image \u2013pgo=myclass.iprof MyClass //Build Native Image $ native-image \u2013no-server \\ -J-Xmx3g \\ -J-Dapp.props=value Sys property for java program -Dfoo=bar Image build/run-time system property \u2013verbose \\ \u2013static \\ \u2013no-fallback \\ \u2013no-server \\ \u2013report-unsupported-elements-at-runtime \\ \u2013allow-incomplete-classpath \\ \u2013enable-https \\ -H:Name=micronaut-test \\ Biinary name -H:-ParseRuntimeOptions \\ Avoid parsing -D options at runtime. -H:IncludeResources=logback.xml|application.yml|bootstrap.yml \\ -H:ConfigurationFileDirectories=/var/config \\ -H:+PrintUniverse \\ Print information about classes, methods, and fields -H:+AddAllCharsets \\ -H:+ReportExceptionStackTraces \\ Print stacktrace of underlying exception -H:Class=micronaut.test.Application # Other misc configs. -H:+TraceClassInitialization -H:IncludeResourceBundles=test.HelpFormatterMessages \\ \u2013initialize-at-run-time=java.lang.Math$RandomNumberGeneratorHolder \\ \u2013initialize-at-build-time \\ or \u2013initialize-at-build-time=com.xxx.. \\ \u2013enable-url-protocols=http,https \\ or -H:EnableURLProtocols=http,https \u2013enable-all-security-services \\ -H:Log=registerResource: \\ -H:+PrintAnalysisStatistics \\ // New type flow analysts -H:+RemoveSaturatedTypeFlows \\ https://github.com/graalvm/graalvm-demos/tree/master/native-image-configure-examples // Assisted configuration for Native-Image or config-output-dir= \u00b6 $ java -agentlib:native-image-agent=experimental-class-loader-support, config-merge-dir=${buildDir}/src/main/resources/META-INF/native-image/dev.suresh/my-app, config-write-period-secs=300, config-write-initial-delay-secs=5 \u2026 // List all image build options $ native-image \u2013expert-options-all // Substrate VM dependency compileOnly \"org.graalvm.nativeimage:svm\" // Docker build FROM oracle/graalvm-ce:19.3.2-java11 as graalvm COPY . /home/app/micronaut-test WORKDIR /home/app/micronaut-test RUN gu install native-image RUN native-image --no-server --static -cp build/libs/micronaut-test-*-all.jar FROM scratch EXPOSE 8080 COPY --from = graalvm /home/app/micronaut-test/micronaut-test /app/micronaut-test WORKDIR /app/micronaut-test ENTRYPOINT [ \"/app/micronaut-test\" , \"-Djava.library.path=/app\" ] Savings are mainly due to: \u27a1\ufe0f No meta-data for dynamically loaded classes \u27a1\ufe0f No profiling data \u27a1\ufe0f No JIT compiler data structures \u27a1\ufe0f No dynamic code cache \u27a1\ufe0f Removing unused fields \u27a1\ufe0f No reduction of application payload memory ** Docker Commmands \u00b6 $ docker run \\ # \u2013cap-add=SYS_ADMIN \u2013rm \\ -it \\ \u2013name native-image \\ -p 8443:8443 \\ -v \u201c$PWD\u201d:/usr/src/app \\ -w /usr/src/app \\ oracle/graalvm-ce:19.3.0.2-java11 \\ /bin/bash SpringBoot \u00b6 $ curl https://start.spring.io/starter.zip -d bootVersion=2.2.4.RELEASE -d dependencies=web -o demo.zip $ unzip demo.zip $ ./mvnw package $ java -jar target/demo-0.0.1-SNAPSHOT.jar $ curl -X GET http://localhost:8080/ Vegeta \u00b6 echo \u201cGET http://localhost:8080/long \u201d | vegeta attack -duration=2s -rate=50/1s | tee results.bin | vegeta report\\ncat results.bin | vegeta plot > plot.html && open plot.html echo \u201cGET http://:8080/long\u201d | vegeta attack -duration=5s -name=Virtual-Thread-1k -rate=1000 > results.vthread.bin echo \u201cGET http://:8080/long\u201d | vegeta attack -duration=10s -name=Virtual-Thread-1k -rate=1000 > results.vthread.bin vegeta plot -title threads results.nthread.bin results.vthread.bin > plot.html sourceSets { \u201cmain\u201d { projectDefault() java.srcDirs(\u201c../builtins-serializer/src\u201d, \u201c../javac-wrapper/src\u201d) } \u201ctest\u201d { } } Cloud ctl gradle kts update to github Reprodicuble gradle build Github action complete for dart and Graal AOT \u2014.github/no-response.yml ----- daysUntilClose: 14 responseRequiredLabel: \u201cstatus/waiting on feedback\u201d closeComment: > This issue has been automatically closed because there has been no response after requesting feedback. Please feel free to re-open this issue if the scenario still exists and provide a comment with more information. --------- mvn archetype:generate -DgroupId=dev.suresh -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false https://dart-services.appspot.com/api/dartservices/v2/compileDDC Truststore \u00b6 To create a RootCA PKCS#12 trust-store of the given URL # Extract the server certificates. $ echo -n | openssl s_client -showcerts -connect google.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > globalsign.crt # Create/Add trust store $ keytool -importcert -trustcacerts -alias globalsign-rootca -storetype PKCS12 -keystore globalsign-rootca.p12 -storepass changeit -file globalsign.crt # Add intermediate certs (Optional) $ keytool -importcert -keystore globalsign-rootca.p12 -alias CA-intermediate -storepass changeit -file CA-intermediate.cer # Show PKCS#12 info. $ openssl pkcs12 -info -password pass:changeit -in globalsign-rootca.p12 $ keytool -list -keystore globalsign-rootca.p12 --storetype pkcs12 -storepass changeit # Create a new PKCS#12 store from certs $ openssl pkcs12 -export -chain -out keystore.p12 -inkey private.key -password pass:test123 \\ -in client.crt -certfile client.crt -CAfile cacert.crt -name client-key \\ -caname root-ca","title":"JDK Commands to edit"},{"location":"JDK-Commands-to-edit/#list-maven-deps","text":"$ ./mvnw -B -DoutputFile=target/deps.txt -DskipTests clean dependency:list install // JCmd commandds $ jcmd -l // List all java process (or JPS) $ jcmd // Get all properties $ jcmd Thread.print // Thread Dump $ jcmd VM.system_properties $ jcmd VM.command_line $ jcmd VM.flags // #### Print All VM Options ##### // -XX:+PrintFlagsWithComments - For debug builds $ java -XX:+PrintFlagsFinal -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -version // Java Mission control (AdoptOpenJDk) // Requires java 1.8 $ cd ~/install/openjdk/JMC/JDK Mission Control.app/Contents/MacOS $ ./jmc -vm $JAVA_HOME/bin or $ open JDK Mission Control.app \u2013args -vm ~/.jenv/versions/1.8/bin","title":"List maven deps"},{"location":"JDK-Commands-to-edit/#graalvm-options-native-image","text":"// Install native-image $ gu install native-image ruby R python // Compiler Graphs $ java -Dgraal.Dump=:3 -Dgraal.PrintGraph=Network -jar app.jar // Build PGO enabled binary $ /graal-xxx/bin/java -Dgraal.PGOInstrument=myclass.iprof MyClass $ native-image \u2013pgo=myclass.iprof MyClass //Build Native Image $ native-image \u2013no-server \\ -J-Xmx3g \\ -J-Dapp.props=value Sys property for java program -Dfoo=bar Image build/run-time system property \u2013verbose \\ \u2013static \\ \u2013no-fallback \\ \u2013no-server \\ \u2013report-unsupported-elements-at-runtime \\ \u2013allow-incomplete-classpath \\ \u2013enable-https \\ -H:Name=micronaut-test \\ Biinary name -H:-ParseRuntimeOptions \\ Avoid parsing -D options at runtime. -H:IncludeResources=logback.xml|application.yml|bootstrap.yml \\ -H:ConfigurationFileDirectories=/var/config \\ -H:+PrintUniverse \\ Print information about classes, methods, and fields -H:+AddAllCharsets \\ -H:+ReportExceptionStackTraces \\ Print stacktrace of underlying exception -H:Class=micronaut.test.Application # Other misc configs. -H:+TraceClassInitialization -H:IncludeResourceBundles=test.HelpFormatterMessages \\ \u2013initialize-at-run-time=java.lang.Math$RandomNumberGeneratorHolder \\ \u2013initialize-at-build-time \\ or \u2013initialize-at-build-time=com.xxx.. \\ \u2013enable-url-protocols=http,https \\ or -H:EnableURLProtocols=http,https \u2013enable-all-security-services \\ -H:Log=registerResource: \\ -H:+PrintAnalysisStatistics \\ // New type flow analysts -H:+RemoveSaturatedTypeFlows \\ https://github.com/graalvm/graalvm-demos/tree/master/native-image-configure-examples // Assisted configuration for Native-Image","title":"GraalVM Options (Native Image)"},{"location":"JDK-Commands-to-edit/#or-config-output-dir","text":"$ java -agentlib:native-image-agent=experimental-class-loader-support, config-merge-dir=${buildDir}/src/main/resources/META-INF/native-image/dev.suresh/my-app, config-write-period-secs=300, config-write-initial-delay-secs=5 \u2026 // List all image build options $ native-image \u2013expert-options-all // Substrate VM dependency compileOnly \"org.graalvm.nativeimage:svm\" // Docker build FROM oracle/graalvm-ce:19.3.2-java11 as graalvm COPY . /home/app/micronaut-test WORKDIR /home/app/micronaut-test RUN gu install native-image RUN native-image --no-server --static -cp build/libs/micronaut-test-*-all.jar FROM scratch EXPOSE 8080 COPY --from = graalvm /home/app/micronaut-test/micronaut-test /app/micronaut-test WORKDIR /app/micronaut-test ENTRYPOINT [ \"/app/micronaut-test\" , \"-Djava.library.path=/app\" ] Savings are mainly due to: \u27a1\ufe0f No meta-data for dynamically loaded classes \u27a1\ufe0f No profiling data \u27a1\ufe0f No JIT compiler data structures \u27a1\ufe0f No dynamic code cache \u27a1\ufe0f Removing unused fields \u27a1\ufe0f No reduction of application payload memory **","title":"or config-output-dir="},{"location":"JDK-Commands-to-edit/#docker-commmands","text":"$ docker run \\ # \u2013cap-add=SYS_ADMIN \u2013rm \\ -it \\ \u2013name native-image \\ -p 8443:8443 \\ -v \u201c$PWD\u201d:/usr/src/app \\ -w /usr/src/app \\ oracle/graalvm-ce:19.3.0.2-java11 \\ /bin/bash","title":"Docker Commmands"},{"location":"JDK-Commands-to-edit/#springboot","text":"$ curl https://start.spring.io/starter.zip -d bootVersion=2.2.4.RELEASE -d dependencies=web -o demo.zip $ unzip demo.zip $ ./mvnw package $ java -jar target/demo-0.0.1-SNAPSHOT.jar $ curl -X GET http://localhost:8080/","title":"SpringBoot"},{"location":"JDK-Commands-to-edit/#vegeta","text":"echo \u201cGET http://localhost:8080/long \u201d | vegeta attack -duration=2s -rate=50/1s | tee results.bin | vegeta report\\ncat results.bin | vegeta plot > plot.html && open plot.html echo \u201cGET http://:8080/long\u201d | vegeta attack -duration=5s -name=Virtual-Thread-1k -rate=1000 > results.vthread.bin echo \u201cGET http://:8080/long\u201d | vegeta attack -duration=10s -name=Virtual-Thread-1k -rate=1000 > results.vthread.bin vegeta plot -title threads results.nthread.bin results.vthread.bin > plot.html sourceSets { \u201cmain\u201d { projectDefault() java.srcDirs(\u201c../builtins-serializer/src\u201d, \u201c../javac-wrapper/src\u201d) } \u201ctest\u201d { } } Cloud ctl gradle kts update to github Reprodicuble gradle build Github action complete for dart and Graal AOT \u2014.github/no-response.yml ----- daysUntilClose: 14 responseRequiredLabel: \u201cstatus/waiting on feedback\u201d closeComment: > This issue has been automatically closed because there has been no response after requesting feedback. Please feel free to re-open this issue if the scenario still exists and provide a comment with more information. --------- mvn archetype:generate -DgroupId=dev.suresh -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false https://dart-services.appspot.com/api/dartservices/v2/compileDDC","title":"Vegeta"},{"location":"JDK-Commands-to-edit/#truststore","text":"To create a RootCA PKCS#12 trust-store of the given URL # Extract the server certificates. $ echo -n | openssl s_client -showcerts -connect google.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > globalsign.crt # Create/Add trust store $ keytool -importcert -trustcacerts -alias globalsign-rootca -storetype PKCS12 -keystore globalsign-rootca.p12 -storepass changeit -file globalsign.crt # Add intermediate certs (Optional) $ keytool -importcert -keystore globalsign-rootca.p12 -alias CA-intermediate -storepass changeit -file CA-intermediate.cer # Show PKCS#12 info. $ openssl pkcs12 -info -password pass:changeit -in globalsign-rootca.p12 $ keytool -list -keystore globalsign-rootca.p12 --storetype pkcs12 -storepass changeit # Create a new PKCS#12 store from certs $ openssl pkcs12 -export -chain -out keystore.p12 -inkey private.key -password pass:test123 \\ -in client.crt -certfile client.crt -CAfile cacert.crt -name client-key \\ -caname root-ca","title":"Truststore"},{"location":"Kotlin/","text":"Kotlin \u00b6 https://github.com/JoseAlcerreca/kotlin-std-fun Blogs \u00b6 Coroutines Design document Videos \u00b6 https://openjdk.java.net/projects/jigsaw/ (Under Presentations) https://www.youtube.com/playlist?list=PLQ176FUIyIUY6SKGl3Cj9yeYibBuRr3Hl (Kotlin Konf) https://www.youtube.com/watch?v=IhKTIFlNrC4&list=PLQ176FUIyIUY6SKGl3Cj9yeYibBuRr3Hl (Kotlinx Serialization) https://www.youtube.com/watch?v=tYcqn48SMT8&list=PLQ176FUIyIUY6SKGl3Cj9yeYibBuRr3Hl&index=32 (Flow) https://www.youtube.com/watch?v=te3OU9fxC8U (End of kotlin) https://www.youtube.com/watch?v=NURkLq6BzLE (Facts you may not know about Kotlin by Eugene Petrenko) https://www.youtube.com/watch?v=E9K5m1HXMSc (Contibuous Monitorting JFR) https://www.youtube.com/watch?v=OxS66Q26ykA (Springboot Graal Native) https://www.youtube.com/watch?v=rJFgdFIs_k8&t=1768s (Micronaut) https://www.youtube.com/watch?v=S5yfTfPeue8&t=1s (Micronaut Deepdive) https://www.youtube.com/channel/UCCBVCTuk6uJrN3iFV_3vurg/videos (Devoxx lot of new stuffs) https://www.youtube.com/watch?v=SEKsvHYZz8s (crypto 101) https://www.youtube.com/watch?v=yJrJEvvW_HA (SSL/TLS) https://www.youtube.com/watch?v=tjOrSH6db9E (Maven) https://www.youtube.com/watch?v=wgJWs14YcEs (An Introduction to JVM Performance \u2022 Rafael Winterhalter) https://www.youtube.com/watch?v=kR2sm1zelI4&t=1522s (Circuit Breakers) https://www.youtube.com/watch?v=DEOqLTxkK8A&feature=emb_title (What I Wish I Knew About Maven Years Ago) https://www.youtube.com/watch?v=tfZ6x0rYD6Y (Surviving Dependency Hell) https://www.youtube.com/watch?v=eObqfqQLwe0 (Implementing Microservices Architecture with Kubernetes) Whats new in java security - https://www.youtube.com/watch?v=dNoxScux2j0 https://www.packtpub.com/application-development/hands-cryptography-java-video LJC Talk - https://www.youtube.com/watch?v=Ll_NK0SZy6Q&t=2148s (Continuous Deployment of JVM applications) Junit5 - https://www.youtube.com/watch?v=VP0vb-FxyNw StampedLock - https://www.youtube.com/watch?v=QER63oNLpAE Phaser - https://www.youtube.com/watch?v=Xro4KwoMNJ8 https://www.youtube.com/watch?v=J3QZ5gfCtAg - Defog https://www.youtube.com/results?search_query=completablefuture+and+completionstage https://www.youtube.com/watch?v=I4HICQ-KoV4 (Dependency Management with Gradle) Courses \u00b6 https://www.udacity.com/course/applied-cryptography--cs387 https://www.coursera.org/learn/crypto#syllabus GoLang \u00b6 Go module error for private repo . [ url \"ssh://git@github.com/\" ] insteadOf = https://github.com/","title":"Kotlin"},{"location":"Kotlin/#kotlin","text":"https://github.com/JoseAlcerreca/kotlin-std-fun","title":"Kotlin"},{"location":"Kotlin/#blogs","text":"Coroutines Design document","title":"Blogs"},{"location":"Kotlin/#videos","text":"https://openjdk.java.net/projects/jigsaw/ (Under Presentations) https://www.youtube.com/playlist?list=PLQ176FUIyIUY6SKGl3Cj9yeYibBuRr3Hl (Kotlin Konf) https://www.youtube.com/watch?v=IhKTIFlNrC4&list=PLQ176FUIyIUY6SKGl3Cj9yeYibBuRr3Hl (Kotlinx Serialization) https://www.youtube.com/watch?v=tYcqn48SMT8&list=PLQ176FUIyIUY6SKGl3Cj9yeYibBuRr3Hl&index=32 (Flow) https://www.youtube.com/watch?v=te3OU9fxC8U (End of kotlin) https://www.youtube.com/watch?v=NURkLq6BzLE (Facts you may not know about Kotlin by Eugene Petrenko) https://www.youtube.com/watch?v=E9K5m1HXMSc (Contibuous Monitorting JFR) https://www.youtube.com/watch?v=OxS66Q26ykA (Springboot Graal Native) https://www.youtube.com/watch?v=rJFgdFIs_k8&t=1768s (Micronaut) https://www.youtube.com/watch?v=S5yfTfPeue8&t=1s (Micronaut Deepdive) https://www.youtube.com/channel/UCCBVCTuk6uJrN3iFV_3vurg/videos (Devoxx lot of new stuffs) https://www.youtube.com/watch?v=SEKsvHYZz8s (crypto 101) https://www.youtube.com/watch?v=yJrJEvvW_HA (SSL/TLS) https://www.youtube.com/watch?v=tjOrSH6db9E (Maven) https://www.youtube.com/watch?v=wgJWs14YcEs (An Introduction to JVM Performance \u2022 Rafael Winterhalter) https://www.youtube.com/watch?v=kR2sm1zelI4&t=1522s (Circuit Breakers) https://www.youtube.com/watch?v=DEOqLTxkK8A&feature=emb_title (What I Wish I Knew About Maven Years Ago) https://www.youtube.com/watch?v=tfZ6x0rYD6Y (Surviving Dependency Hell) https://www.youtube.com/watch?v=eObqfqQLwe0 (Implementing Microservices Architecture with Kubernetes) Whats new in java security - https://www.youtube.com/watch?v=dNoxScux2j0 https://www.packtpub.com/application-development/hands-cryptography-java-video LJC Talk - https://www.youtube.com/watch?v=Ll_NK0SZy6Q&t=2148s (Continuous Deployment of JVM applications) Junit5 - https://www.youtube.com/watch?v=VP0vb-FxyNw StampedLock - https://www.youtube.com/watch?v=QER63oNLpAE Phaser - https://www.youtube.com/watch?v=Xro4KwoMNJ8 https://www.youtube.com/watch?v=J3QZ5gfCtAg - Defog https://www.youtube.com/results?search_query=completablefuture+and+completionstage https://www.youtube.com/watch?v=I4HICQ-KoV4 (Dependency Management with Gradle)","title":"Videos"},{"location":"Kotlin/#courses","text":"https://www.udacity.com/course/applied-cryptography--cs387 https://www.coursera.org/learn/crypto#syllabus","title":"Courses"},{"location":"Kotlin/#golang","text":"Go module error for private repo . [ url \"ssh://git@github.com/\" ] insteadOf = https://github.com/","title":"GoLang"},{"location":"Overview/","text":"Module OpenJDK PlayGround \u00b6 Setup OpenJDK \u00b6 # Set JDK to latest (Use SDKMAN) $ sdk rm java jdk-16-loom $ curl -sSL https://jdk.java.net/loom | grep -m1 -Eioh \"https:.*osx-x64_bin.tar.gz\" | xargs curl | tar xvz - $ sdk i java jdk-16-loom ./jdk-16.jdk/Contents/Home $ sdk u java jdk-16-loom Build \u00b6 $ ./gradlew --console plain clean build # Runs all checks $ ./gradlew clean check # Check tasks dependencies and version updates $ ./gradlew clean build --dry-run $ ./gradlew dependencyUpdates Run with preview features enabled \u00b6 $ java -showversion --enable-preview -XX:+UseZGC -jar build/libs/openjdk-latest-1.0.0-uber.jar Run the application container \u00b6 $ ./gradlew jibDockerBuild $ docker run -it --rm --name openjdk-latest sureshg/openjdk-latest Load testing the Loom Web Server \u00b6 Check if the service is up and running! $ curl -v -k https://localhost:8443 Set the os ulimit for Vegeta $ ulimit -n 4096 // FD limit $ ulimit -u 1024 // processes limit Run with kernel threads. $ echo \"GET https://127.0.0.1:8443/\" | vegeta attack -insecure -duration = 10s -name = Threads -rate = 250 | tee thread-results.bin | vegeta report $ vegeta report -type = json thread-results.bin > thread-metrics.json $ cat thread-results.bin | vegeta report -type = \"hist[0,100ms,200ms,300ms]\" $ cat thread-results.bin | vegeta plot -title \"Normal Threads\" > plot.html && open plot.html Run wih Loom Virtual threads. $ echo \"GET https://127.0.0.1:8443/\" | vegeta attack -insecure -duration = 10s -name = VirtualThreads -rate = 250 | tee vthread-results.bin | vegeta report $ vegeta report -type = json vthread-results.bin > vthread-metrics.json $ cat vthread-results.bin | vegeta report -type = \"hist[0,100ms,200ms,300ms]\" $ cat vthread-results.bin | vegeta plot -title \"Virtual Threads\" > plot.html && open plot.html Combine the results and plot a single graph. $ vegeta plot -title \"Threads vs Loom Virtual Threads\" vthread-results.bin thread-results.bin > plot.html && open plot.html <!\u2013 Http APIs to test - https://api.github.com/repos/jetbrains/kotlin Cloud Run ==> https://github.com/jamesward/hello-kotlin-ktor https://www.eclipse.org/jetty/documentation/current/high-load.html https://webtide.com/lies-damned-lies-and-benchmarks-2/ https://github.com/marketplace/actions/download-openjdk https://github.com/sormuras/junit5-looming/blob/master/.github/workflows/main.yml https://github.com/JakeWharton/picnic https://github.com/h0tk3y/better-parse https://github.com/actions/cache/blob/main/examples.md#java---gradle https://github.com/android/gradle-recipes \u2192","title":"Installation"},{"location":"Overview/#module-openjdk-playground","text":"","title":"Module OpenJDK PlayGround"},{"location":"Overview/#setup-openjdk","text":"# Set JDK to latest (Use SDKMAN) $ sdk rm java jdk-16-loom $ curl -sSL https://jdk.java.net/loom | grep -m1 -Eioh \"https:.*osx-x64_bin.tar.gz\" | xargs curl | tar xvz - $ sdk i java jdk-16-loom ./jdk-16.jdk/Contents/Home $ sdk u java jdk-16-loom","title":"Setup OpenJDK"},{"location":"Overview/#build","text":"$ ./gradlew --console plain clean build # Runs all checks $ ./gradlew clean check # Check tasks dependencies and version updates $ ./gradlew clean build --dry-run $ ./gradlew dependencyUpdates","title":"Build"},{"location":"Overview/#run-with-preview-features-enabled","text":"$ java -showversion --enable-preview -XX:+UseZGC -jar build/libs/openjdk-latest-1.0.0-uber.jar","title":"Run with preview features enabled"},{"location":"Overview/#run-the-application-container","text":"$ ./gradlew jibDockerBuild $ docker run -it --rm --name openjdk-latest sureshg/openjdk-latest","title":"Run the application container"},{"location":"Overview/#load-testing-the-loom-web-server","text":"Check if the service is up and running! $ curl -v -k https://localhost:8443 Set the os ulimit for Vegeta $ ulimit -n 4096 // FD limit $ ulimit -u 1024 // processes limit Run with kernel threads. $ echo \"GET https://127.0.0.1:8443/\" | vegeta attack -insecure -duration = 10s -name = Threads -rate = 250 | tee thread-results.bin | vegeta report $ vegeta report -type = json thread-results.bin > thread-metrics.json $ cat thread-results.bin | vegeta report -type = \"hist[0,100ms,200ms,300ms]\" $ cat thread-results.bin | vegeta plot -title \"Normal Threads\" > plot.html && open plot.html Run wih Loom Virtual threads. $ echo \"GET https://127.0.0.1:8443/\" | vegeta attack -insecure -duration = 10s -name = VirtualThreads -rate = 250 | tee vthread-results.bin | vegeta report $ vegeta report -type = json vthread-results.bin > vthread-metrics.json $ cat vthread-results.bin | vegeta report -type = \"hist[0,100ms,200ms,300ms]\" $ cat vthread-results.bin | vegeta plot -title \"Virtual Threads\" > plot.html && open plot.html Combine the results and plot a single graph. $ vegeta plot -title \"Threads vs Loom Virtual Threads\" vthread-results.bin thread-results.bin > plot.html && open plot.html <!\u2013 Http APIs to test - https://api.github.com/repos/jetbrains/kotlin Cloud Run ==> https://github.com/jamesward/hello-kotlin-ktor https://www.eclipse.org/jetty/documentation/current/high-load.html https://webtide.com/lies-damned-lies-and-benchmarks-2/ https://github.com/marketplace/actions/download-openjdk https://github.com/sormuras/junit5-looming/blob/master/.github/workflows/main.yml https://github.com/JakeWharton/picnic https://github.com/h0tk3y/better-parse https://github.com/actions/cache/blob/main/examples.md#java---gradle https://github.com/android/gradle-recipes \u2192","title":"Load testing the Loom Web Server"},{"location":"%5Bjvm%20root%5D/","text":"// openjdk-latest / [jvm root] Package [jvm root] \u00b6 Types \u00b6 Name Summary Result [jvm] Content sealed class Result < T > Functions \u00b6 Name Summary main [jvm] Content fun main () Properties \u00b6 Name Summary exhaustive [jvm] val < T > T . exhaustive : T","title":"Index"},{"location":"%5Bjvm%20root%5D/#package-jvm-root","text":"","title":"Package [jvm root]"},{"location":"%5Bjvm%20root%5D/#types","text":"Name Summary Result [jvm] Content sealed class Result < T >","title":"Types"},{"location":"%5Bjvm%20root%5D/#functions","text":"Name Summary main [jvm] Content fun main ()","title":"Functions"},{"location":"%5Bjvm%20root%5D/#properties","text":"Name Summary exhaustive [jvm] val < T > T . exhaustive : T","title":"Properties"},{"location":"%5Bjvm%20root%5D/main/","text":"// openjdk-latest / [jvm root] / main main \u00b6 [jvm] Content fun main ()","title":"Main"},{"location":"%5Bjvm%20root%5D/main/#main","text":"[jvm] Content fun main ()","title":"main"},{"location":"%5Bjvm%20root%5D/-result/","text":"// openjdk-latest / [jvm root] / Result Result \u00b6 [jvm] sealed class Result < T > Types \u00b6 Name Summary Error [jvm] Content sealed class Error : Result< Nothing > InProgress [jvm] Content object InProgress : Result< Nothing > Success [jvm] Content data class Success < T : Any >( data : T ) : Result< T > Functions \u00b6 Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String","title":"Index"},{"location":"%5Bjvm%20root%5D/-result/#result","text":"[jvm] sealed class Result < T >","title":"Result"},{"location":"%5Bjvm%20root%5D/-result/#types","text":"Name Summary Error [jvm] Content sealed class Error : Result< Nothing > InProgress [jvm] Content object InProgress : Result< Nothing > Success [jvm] Content data class Success < T : Any >( data : T ) : Result< T >","title":"Types"},{"location":"%5Bjvm%20root%5D/-result/#functions","text":"Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String","title":"Functions"},{"location":"%5Bjvm%20root%5D/-result/-error/","text":"// openjdk-latest / [jvm root] / Result / Error Error \u00b6 [jvm] sealed class Error : Result< Nothing > Types \u00b6 Name Summary NonRecException [jvm] Content class NonRecException ( e : Exception ) : Result.Error RecException [jvm] Content class RecException ( e : Exception ) : Result.Error Functions \u00b6 Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String Properties \u00b6 Name Summary exec [jvm] val exec : Exception","title":"Index"},{"location":"%5Bjvm%20root%5D/-result/-error/#error","text":"[jvm] sealed class Error : Result< Nothing >","title":"Error"},{"location":"%5Bjvm%20root%5D/-result/-error/#types","text":"Name Summary NonRecException [jvm] Content class NonRecException ( e : Exception ) : Result.Error RecException [jvm] Content class RecException ( e : Exception ) : Result.Error","title":"Types"},{"location":"%5Bjvm%20root%5D/-result/-error/#functions","text":"Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String","title":"Functions"},{"location":"%5Bjvm%20root%5D/-result/-error/#properties","text":"Name Summary exec [jvm] val exec : Exception","title":"Properties"},{"location":"%5Bjvm%20root%5D/-result/-error/-non-rec-exception/","text":"// openjdk-latest / [jvm root] / Result / Error / NonRecException NonRecException \u00b6 [jvm] class NonRecException ( e : Exception ) : Result.Error Functions \u00b6 Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String Properties \u00b6 Name Summary e [jvm] val e : Exception exec [jvm] override val exec : Exception","title":"Index"},{"location":"%5Bjvm%20root%5D/-result/-error/-non-rec-exception/#nonrecexception","text":"[jvm] class NonRecException ( e : Exception ) : Result.Error","title":"NonRecException"},{"location":"%5Bjvm%20root%5D/-result/-error/-non-rec-exception/#functions","text":"Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String","title":"Functions"},{"location":"%5Bjvm%20root%5D/-result/-error/-non-rec-exception/#properties","text":"Name Summary e [jvm] val e : Exception exec [jvm] override val exec : Exception","title":"Properties"},{"location":"%5Bjvm%20root%5D/-result/-error/-non-rec-exception/-non-rec-exception/","text":"// openjdk-latest / [jvm root] / Result / Error / NonRecException / NonRecException NonRecException \u00b6 [jvm] Content fun NonRecException (e: Exception )","title":" non rec exception"},{"location":"%5Bjvm%20root%5D/-result/-error/-non-rec-exception/-non-rec-exception/#nonrecexception","text":"[jvm] Content fun NonRecException (e: Exception )","title":"NonRecException"},{"location":"%5Bjvm%20root%5D/-result/-error/-rec-exception/","text":"// openjdk-latest / [jvm root] / Result / Error / RecException RecException \u00b6 [jvm] class RecException ( e : Exception ) : Result.Error Functions \u00b6 Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String Properties \u00b6 Name Summary e [jvm] val e : Exception exec [jvm] override val exec : Exception","title":"Index"},{"location":"%5Bjvm%20root%5D/-result/-error/-rec-exception/#recexception","text":"[jvm] class RecException ( e : Exception ) : Result.Error","title":"RecException"},{"location":"%5Bjvm%20root%5D/-result/-error/-rec-exception/#functions","text":"Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String","title":"Functions"},{"location":"%5Bjvm%20root%5D/-result/-error/-rec-exception/#properties","text":"Name Summary e [jvm] val e : Exception exec [jvm] override val exec : Exception","title":"Properties"},{"location":"%5Bjvm%20root%5D/-result/-error/-rec-exception/-rec-exception/","text":"// openjdk-latest / [jvm root] / Result / Error / RecException / RecException RecException \u00b6 [jvm] Content fun RecException (e: Exception )","title":" rec exception"},{"location":"%5Bjvm%20root%5D/-result/-error/-rec-exception/-rec-exception/#recexception","text":"[jvm] Content fun RecException (e: Exception )","title":"RecException"},{"location":"%5Bjvm%20root%5D/-result/-in-progress/","text":"// openjdk-latest / [jvm root] / Result / InProgress InProgress \u00b6 [jvm] object InProgress : Result< Nothing > Functions \u00b6 Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String","title":"Index"},{"location":"%5Bjvm%20root%5D/-result/-in-progress/#inprogress","text":"[jvm] object InProgress : Result< Nothing >","title":"InProgress"},{"location":"%5Bjvm%20root%5D/-result/-in-progress/#functions","text":"Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String","title":"Functions"},{"location":"%5Bjvm%20root%5D/-result/-success/","text":"// openjdk-latest / [jvm root] / Result / Success Success \u00b6 [jvm] data class Success < T : Any >( data : T ) : Result< T > Functions \u00b6 Name Summary component1 [jvm] Content operator fun component1 (): T copy [jvm] Content fun copy (data: T ): Result.Success< T > equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String Properties \u00b6 Name Summary data [jvm] val data : T","title":"Index"},{"location":"%5Bjvm%20root%5D/-result/-success/#success","text":"[jvm] data class Success < T : Any >( data : T ) : Result< T >","title":"Success"},{"location":"%5Bjvm%20root%5D/-result/-success/#functions","text":"Name Summary component1 [jvm] Content operator fun component1 (): T copy [jvm] Content fun copy (data: T ): Result.Success< T > equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String","title":"Functions"},{"location":"%5Bjvm%20root%5D/-result/-success/#properties","text":"Name Summary data [jvm] val data : T","title":"Properties"},{"location":"%5Bjvm%20root%5D/-result/-success/-success/","text":"// openjdk-latest / [jvm root] / Result / Success / Success Success \u00b6 [jvm] Content fun < T : Any > Success (data: T )","title":" success"},{"location":"%5Bjvm%20root%5D/-result/-success/-success/#success","text":"[jvm] Content fun < T : Any > Success (data: T )","title":"Success"},{"location":"%5Bjvm%20root%5D/-result/-success/component1/","text":"// openjdk-latest / [jvm root] / Result / Success / component1 component1 \u00b6 [jvm] Content operator fun component1 (): T","title":"Component1"},{"location":"%5Bjvm%20root%5D/-result/-success/component1/#component1","text":"[jvm] Content operator fun component1 (): T","title":"component1"},{"location":"%5Bjvm%20root%5D/-result/-success/copy/","text":"// openjdk-latest / [jvm root] / Result / Success / copy copy \u00b6 [jvm] Content fun copy (data: T ): Result.Success< T >","title":"Copy"},{"location":"%5Bjvm%20root%5D/-result/-success/copy/#copy","text":"[jvm] Content fun copy (data: T ): Result.Success< T >","title":"copy"},{"location":"dev.suresh/","text":"// openjdk-latest / dev.suresh Package dev.suresh \u00b6 Types \u00b6 Name Summary Main [jvm] Content open class Main RecInterface [jvm] Content interface RecInterface RecordSuper [jvm] Content open class RecordSuper","title":"Index"},{"location":"dev.suresh/#package-devsuresh","text":"","title":"Package dev.suresh"},{"location":"dev.suresh/#types","text":"Name Summary Main [jvm] Content open class Main RecInterface [jvm] Content interface RecInterface RecordSuper [jvm] Content open class RecordSuper","title":"Types"},{"location":"dev.suresh/-main/","text":"// openjdk-latest / dev.suresh / Main Main \u00b6 [jvm] open class Main Functions \u00b6 Name Summary computeScore [jvm] Content open fun computeScore (p: Person): Int equals [jvm] Content open fun equals (o: Any ): Boolean hashCode [jvm] Content open fun hashCode (): Int main [jvm] Content open fun main (args: Array < String >) topN [jvm] Content open fun topN (persons: List , count: Int ): List","title":"Index"},{"location":"dev.suresh/-main/#main","text":"[jvm] open class Main","title":"Main"},{"location":"dev.suresh/-main/#functions","text":"Name Summary computeScore [jvm] Content open fun computeScore (p: Person): Int equals [jvm] Content open fun equals (o: Any ): Boolean hashCode [jvm] Content open fun hashCode (): Int main [jvm] Content open fun main (args: Array < String >) topN [jvm] Content open fun topN (persons: List , count: Int ): List","title":"Functions"},{"location":"dev.suresh/-main/compute-score/","text":"// openjdk-latest / dev.suresh / Main / computeScore computeScore \u00b6 [jvm] Content open fun computeScore (p: Person): Int","title":"Compute score"},{"location":"dev.suresh/-main/compute-score/#computescore","text":"[jvm] Content open fun computeScore (p: Person): Int","title":"computeScore"},{"location":"dev.suresh/-main/equals/","text":"// openjdk-latest / dev.suresh / Main / equals equals \u00b6 [jvm] Content open fun equals (o: Any ): Boolean","title":"Equals"},{"location":"dev.suresh/-main/equals/#equals","text":"[jvm] Content open fun equals (o: Any ): Boolean","title":"equals"},{"location":"dev.suresh/-main/hash-code/","text":"// openjdk-latest / dev.suresh / Main / hashCode hashCode \u00b6 [jvm] Content open fun hashCode (): Int","title":"Hash code"},{"location":"dev.suresh/-main/hash-code/#hashcode","text":"[jvm] Content open fun hashCode (): Int","title":"hashCode"},{"location":"dev.suresh/-main/main/","text":"// openjdk-latest / dev.suresh / Main / main main \u00b6 [jvm] Content open fun main (args: Array < String >)","title":"Main"},{"location":"dev.suresh/-main/main/#main","text":"[jvm] Content open fun main (args: Array < String >)","title":"main"},{"location":"dev.suresh/-main/top-n/","text":"// openjdk-latest / dev.suresh / Main / topN topN \u00b6 [jvm] Content open fun topN (persons: List , count: Int ): List","title":"Top n"},{"location":"dev.suresh/-main/top-n/#topn","text":"[jvm] Content open fun topN (persons: List , count: Int ): List","title":"topN"},{"location":"dev.suresh/-rec-interface/","text":"// openjdk-latest / dev.suresh / RecInterface RecInterface \u00b6 [jvm] interface RecInterface Properties \u00b6 Name Summary Rec [jvm] val Rec : record","title":"Index"},{"location":"dev.suresh/-rec-interface/#recinterface","text":"[jvm] interface RecInterface","title":"RecInterface"},{"location":"dev.suresh/-rec-interface/#properties","text":"Name Summary Rec [jvm] val Rec : record","title":"Properties"},{"location":"dev.suresh/-record-super/","text":"// openjdk-latest / dev.suresh / RecordSuper RecordSuper \u00b6 [jvm] open class RecordSuper","title":"Index"},{"location":"dev.suresh/-record-super/#recordsuper","text":"[jvm] open class RecordSuper","title":"RecordSuper"},{"location":"dev.suresh.loom/","text":"// openjdk-latest / dev.suresh.loom Package dev.suresh.loom \u00b6 Types \u00b6 Name Summary LoomServer [jvm] Content object LoomServer","title":"Index"},{"location":"dev.suresh.loom/#package-devsureshloom","text":"","title":"Package dev.suresh.loom"},{"location":"dev.suresh.loom/#types","text":"Name Summary LoomServer [jvm] Content object LoomServer","title":"Types"},{"location":"dev.suresh.loom/-loom-server/","text":"// openjdk-latest / dev.suresh.loom / LoomServer LoomServer \u00b6 [jvm] object LoomServer Functions \u00b6 Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int run [jvm] Content @ JvmStatic () fun run () toString [jvm] Content open override fun toString (): String","title":"Index"},{"location":"dev.suresh.loom/-loom-server/#loomserver","text":"[jvm] object LoomServer","title":"LoomServer"},{"location":"dev.suresh.loom/-loom-server/#functions","text":"Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int run [jvm] Content @ JvmStatic () fun run () toString [jvm] Content open override fun toString (): String","title":"Functions"},{"location":"dev.suresh.loom/-loom-server/run/","text":"// openjdk-latest / dev.suresh.loom / LoomServer / run run \u00b6 [jvm] Content @ JvmStatic () fun run ()","title":"Run"},{"location":"dev.suresh.loom/-loom-server/run/#run","text":"[jvm] Content @ JvmStatic () fun run ()","title":"run"},{"location":"dev.suresh.loom.jetty/","text":"// openjdk-latest / dev.suresh.loom.jetty Package dev.suresh.loom.jetty \u00b6 Types \u00b6 Name Summary HelloHandler [jvm] Content class HelloHandler : AbstractHandler LoomThreadPool [jvm] Content class LoomThreadPool : AbstractLifeCycle, ThreadPool Functions \u00b6 Name Summary main [jvm] Content fun main () pumpRequests [jvm] Content fun pumpRequests (server: Server, count: Int , deadlineInSec: Long ) run [jvm] Content fun run (port: Int )","title":"Index"},{"location":"dev.suresh.loom.jetty/#package-devsureshloomjetty","text":"","title":"Package dev.suresh.loom.jetty"},{"location":"dev.suresh.loom.jetty/#types","text":"Name Summary HelloHandler [jvm] Content class HelloHandler : AbstractHandler LoomThreadPool [jvm] Content class LoomThreadPool : AbstractLifeCycle, ThreadPool","title":"Types"},{"location":"dev.suresh.loom.jetty/#functions","text":"Name Summary main [jvm] Content fun main () pumpRequests [jvm] Content fun pumpRequests (server: Server, count: Int , deadlineInSec: Long ) run [jvm] Content fun run (port: Int )","title":"Functions"},{"location":"dev.suresh.loom.jetty/main/","text":"// openjdk-latest / dev.suresh.loom.jetty / main main \u00b6 [jvm] Content fun main ()","title":"Main"},{"location":"dev.suresh.loom.jetty/main/#main","text":"[jvm] Content fun main ()","title":"main"},{"location":"dev.suresh.loom.jetty/pump-requests/","text":"// openjdk-latest / dev.suresh.loom.jetty / pumpRequests pumpRequests \u00b6 [jvm] Content fun pumpRequests (server: Server, count: Int , deadlineInSec: Long )","title":"Pump requests"},{"location":"dev.suresh.loom.jetty/pump-requests/#pumprequests","text":"[jvm] Content fun pumpRequests (server: Server, count: Int , deadlineInSec: Long )","title":"pumpRequests"},{"location":"dev.suresh.loom.jetty/run/","text":"// openjdk-latest / dev.suresh.loom.jetty / run run \u00b6 [jvm] Content fun run (port: Int )","title":"Run"},{"location":"dev.suresh.loom.jetty/run/#run","text":"[jvm] Content fun run (port: Int )","title":"run"},{"location":"dev.suresh.loom.jetty/-hello-handler/","text":"// openjdk-latest / dev.suresh.loom.jetty / HelloHandler HelloHandler \u00b6 [jvm] class HelloHandler : AbstractHandler Functions \u00b6 Name Summary addBean [jvm] Content open override fun addBean(p0: Any ): Boolean open override fun addBean(p0: Any , p1: Boolean ): Boolean open override fun addBean(p0: Any , p1: ContainerLifeCycle.Managed): Boolean addEventListener [jvm] Content open override fun addEventListener(p0: EventListener ): Boolean addManaged [jvm] Content open override fun addManaged(p0: LifeCycle) contains [jvm] Content open operator override fun contains(p0: Any ): Boolean destroy [jvm] Content open override fun destroy() doError [jvm] Content open override fun doError~~ ( ~ p0 :~ String ,~~ p1~~ :~~ Request ~, ~ p2~~ :~~ HttpServletRequest ~, ~ p3~~ :~~ HttpServletResponse ~) ~ doStart [jvm] Content open override fun doStart() doStop [jvm] Content open override fun doStop() dump [jvm] Content @ManagedOperation (value = \u201cDump the object to a string\u201d) open override fun dump(): String open override fun dump(p0: Appendable ) open override fun dump(p0: Appendable , p1: String ) dumpObjects [jvm] Content open override fun dumpObjects(p0: Appendable , p1: String , vararg p2: Array < Any >) dumpSelf [jvm] Content open override fun dumpSelf(): String dumpStdErr [jvm] Content @ManagedOperation (value = \u201cDump the object to stderr\u201d) open override fun dumpStdErr() equals [jvm] Content open operator override fun equals (other: Any ?): Boolean getBean [jvm] Content open override fun Any > getBean(p0: Class ): T open override fun getBean(p0: Any ): ContainerLifeCycle.Bean getBeans [jvm] Content open override fun getBeans(): MutableCollection < Any > open override fun Any > getBeans(p0: Class ): MutableCollection getCachedBeans [jvm] Content open override fun Any > getCachedBeans(p0: Class ): MutableCollection getContainedBeans [jvm] Content open override fun Any > getContainedBeans(p0: Class ): MutableCollection open override fun Any > getContainedBeans(p0: Class , p1: MutableCollection ) getEventListeners [jvm] Content open override fun getEventListeners(): MutableList < EventListener > getServer [jvm] Content open override fun getServer(): Server getState [jvm] Content @ManagedAttribute (value = \u201cLifecycle State for this instance\u201d, readonly = true) open override fun getState(): String handle [jvm] Content open override fun handle (target: String ?, baseRequest: Request?, request: HttpServletRequest?, response: HttpServletResponse?) hashCode [jvm] Content open override fun hashCode (): Int isAuto [jvm] Content open override fun isAuto(p0: Any ): Boolean isFailed [jvm] Content open override fun isFailed(): Boolean isManaged [jvm] Content open override fun isManaged(p0: Any ): Boolean isRunning [jvm] Content open override fun isRunning(): Boolean isStarted [jvm] Content open override fun isStarted(): Boolean isStarting [jvm] Content open override fun isStarting(): Boolean isStopped [jvm] Content open override fun isStopped(): Boolean isStopping [jvm] Content open override fun isStopping(): Boolean isUnmanaged [jvm] Content open override fun isUnmanaged(p0: Any ): Boolean manage [jvm] Content open override fun manage(p0: Any ) open override fun manage(p0: ContainerLifeCycle.Bean) remove [jvm] Content open override fun remove(p0: ContainerLifeCycle.Bean): Boolean removeBean [jvm] Content open override fun removeBean(p0: Any ): Boolean removeBeans [jvm] Content open override fun removeBeans() removeEventListener [jvm] Content open override fun removeEventListener(p0: EventListener ): Boolean setBeans [jvm] Content open override fun setBeans(p0: MutableCollection < Any >) setEventListeners [jvm] Content open override fun setEventListeners(p0: MutableCollection < EventListener >) setFailed [jvm] Content open override fun setFailed(p0: Throwable ) setServer [jvm] Content open override fun setServer(p0: Server) setStarted [jvm] Content open override fun setStarted() setStarting [jvm] Content open override fun setStarting() setStopped [jvm] Content open override fun setStopped() setStopping [jvm] Content open override fun setStopping() start [jvm] Content override fun start() open override fun start(p0: LifeCycle) stop [jvm] Content override fun stop() open override fun stop(p0: LifeCycle) toString [jvm] Content open override fun toString(): String unmanage [jvm] Content open override fun unmanage(p0: Any ) open override fun unmanage(p0: ContainerLifeCycle.Bean) updateBean [jvm] Content open override fun updateBean(p0: Any , p1: Any ) open override fun updateBean(p0: Any , p1: Any , p2: Boolean ) updateBeans [jvm] Content open override fun updateBeans(p0: Array < Any >, p1: Array < Any >) Properties \u00b6 Name Summary _beans [jvm] override val _beans : MutableList _destroyed [jvm] override val _destroyed : Boolean _doStarted [jvm] override val _doStarted : Boolean _eventListener [jvm] override val _eventListener : MutableList < EventListener > _listeners [jvm] override val _listeners : MutableList _lock [jvm] override val _lock : Any _server [jvm] override val _server : Server _state [jvm] override val _state : AbstractLifeCycle.State","title":"Index"},{"location":"dev.suresh.loom.jetty/-hello-handler/#hellohandler","text":"[jvm] class HelloHandler : AbstractHandler","title":"HelloHandler"},{"location":"dev.suresh.loom.jetty/-hello-handler/#functions","text":"Name Summary addBean [jvm] Content open override fun addBean(p0: Any ): Boolean open override fun addBean(p0: Any , p1: Boolean ): Boolean open override fun addBean(p0: Any , p1: ContainerLifeCycle.Managed): Boolean addEventListener [jvm] Content open override fun addEventListener(p0: EventListener ): Boolean addManaged [jvm] Content open override fun addManaged(p0: LifeCycle) contains [jvm] Content open operator override fun contains(p0: Any ): Boolean destroy [jvm] Content open override fun destroy() doError [jvm] Content open override fun doError~~ ( ~ p0 :~ String ,~~ p1~~ :~~ Request ~, ~ p2~~ :~~ HttpServletRequest ~, ~ p3~~ :~~ HttpServletResponse ~) ~ doStart [jvm] Content open override fun doStart() doStop [jvm] Content open override fun doStop() dump [jvm] Content @ManagedOperation (value = \u201cDump the object to a string\u201d) open override fun dump(): String open override fun dump(p0: Appendable ) open override fun dump(p0: Appendable , p1: String ) dumpObjects [jvm] Content open override fun dumpObjects(p0: Appendable , p1: String , vararg p2: Array < Any >) dumpSelf [jvm] Content open override fun dumpSelf(): String dumpStdErr [jvm] Content @ManagedOperation (value = \u201cDump the object to stderr\u201d) open override fun dumpStdErr() equals [jvm] Content open operator override fun equals (other: Any ?): Boolean getBean [jvm] Content open override fun Any > getBean(p0: Class ): T open override fun getBean(p0: Any ): ContainerLifeCycle.Bean getBeans [jvm] Content open override fun getBeans(): MutableCollection < Any > open override fun Any > getBeans(p0: Class ): MutableCollection getCachedBeans [jvm] Content open override fun Any > getCachedBeans(p0: Class ): MutableCollection getContainedBeans [jvm] Content open override fun Any > getContainedBeans(p0: Class ): MutableCollection open override fun Any > getContainedBeans(p0: Class , p1: MutableCollection ) getEventListeners [jvm] Content open override fun getEventListeners(): MutableList < EventListener > getServer [jvm] Content open override fun getServer(): Server getState [jvm] Content @ManagedAttribute (value = \u201cLifecycle State for this instance\u201d, readonly = true) open override fun getState(): String handle [jvm] Content open override fun handle (target: String ?, baseRequest: Request?, request: HttpServletRequest?, response: HttpServletResponse?) hashCode [jvm] Content open override fun hashCode (): Int isAuto [jvm] Content open override fun isAuto(p0: Any ): Boolean isFailed [jvm] Content open override fun isFailed(): Boolean isManaged [jvm] Content open override fun isManaged(p0: Any ): Boolean isRunning [jvm] Content open override fun isRunning(): Boolean isStarted [jvm] Content open override fun isStarted(): Boolean isStarting [jvm] Content open override fun isStarting(): Boolean isStopped [jvm] Content open override fun isStopped(): Boolean isStopping [jvm] Content open override fun isStopping(): Boolean isUnmanaged [jvm] Content open override fun isUnmanaged(p0: Any ): Boolean manage [jvm] Content open override fun manage(p0: Any ) open override fun manage(p0: ContainerLifeCycle.Bean) remove [jvm] Content open override fun remove(p0: ContainerLifeCycle.Bean): Boolean removeBean [jvm] Content open override fun removeBean(p0: Any ): Boolean removeBeans [jvm] Content open override fun removeBeans() removeEventListener [jvm] Content open override fun removeEventListener(p0: EventListener ): Boolean setBeans [jvm] Content open override fun setBeans(p0: MutableCollection < Any >) setEventListeners [jvm] Content open override fun setEventListeners(p0: MutableCollection < EventListener >) setFailed [jvm] Content open override fun setFailed(p0: Throwable ) setServer [jvm] Content open override fun setServer(p0: Server) setStarted [jvm] Content open override fun setStarted() setStarting [jvm] Content open override fun setStarting() setStopped [jvm] Content open override fun setStopped() setStopping [jvm] Content open override fun setStopping() start [jvm] Content override fun start() open override fun start(p0: LifeCycle) stop [jvm] Content override fun stop() open override fun stop(p0: LifeCycle) toString [jvm] Content open override fun toString(): String unmanage [jvm] Content open override fun unmanage(p0: Any ) open override fun unmanage(p0: ContainerLifeCycle.Bean) updateBean [jvm] Content open override fun updateBean(p0: Any , p1: Any ) open override fun updateBean(p0: Any , p1: Any , p2: Boolean ) updateBeans [jvm] Content open override fun updateBeans(p0: Array < Any >, p1: Array < Any >)","title":"Functions"},{"location":"dev.suresh.loom.jetty/-hello-handler/#properties","text":"Name Summary _beans [jvm] override val _beans : MutableList _destroyed [jvm] override val _destroyed : Boolean _doStarted [jvm] override val _doStarted : Boolean _eventListener [jvm] override val _eventListener : MutableList < EventListener > _listeners [jvm] override val _listeners : MutableList _lock [jvm] override val _lock : Any _server [jvm] override val _server : Server _state [jvm] override val _state : AbstractLifeCycle.State","title":"Properties"},{"location":"dev.suresh.loom.jetty/-hello-handler/-hello-handler/","text":"// openjdk-latest / dev.suresh.loom.jetty / HelloHandler / HelloHandler HelloHandler \u00b6 [jvm] Content fun HelloHandler ()","title":" hello handler"},{"location":"dev.suresh.loom.jetty/-hello-handler/-hello-handler/#hellohandler","text":"[jvm] Content fun HelloHandler ()","title":"HelloHandler"},{"location":"dev.suresh.loom.jetty/-hello-handler/handle/","text":"// openjdk-latest / dev.suresh.loom.jetty / HelloHandler / handle handle \u00b6 [jvm] Content open override fun handle (target: String ?, baseRequest: Request?, request: HttpServletRequest?, response: HttpServletResponse?)","title":"Handle"},{"location":"dev.suresh.loom.jetty/-hello-handler/handle/#handle","text":"[jvm] Content open override fun handle (target: String ?, baseRequest: Request?, request: HttpServletRequest?, response: HttpServletResponse?)","title":"handle"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/","text":"// openjdk-latest / dev.suresh.loom.jetty / LoomThreadPool LoomThreadPool \u00b6 [jvm] class LoomThreadPool : AbstractLifeCycle, ThreadPool Functions \u00b6 Name Summary addEventListener [jvm] Content open override fun addEventListener(p0: EventListener ): Boolean doStart [jvm] Content open override fun doStart() equals [jvm] Content open operator override fun equals (other: Any ?): Boolean execute [jvm] Content open override fun execute (cmd: Runnable ) getEventListeners [jvm] Content open override fun getEventListeners(): MutableList < EventListener > getIdleThreads [jvm] Content open override fun getIdleThreads (): Int getState [jvm] Content @ManagedAttribute (value = \u201cLifecycle State for this instance\u201d, readonly = true) open override fun getState(): String getThreads [jvm] Content open override fun getThreads (): Int hashCode [jvm] Content open override fun hashCode (): Int isFailed [jvm] Content open override fun isFailed(): Boolean isLowOnThreads [jvm] Content open override fun isLowOnThreads (): Boolean isRunning [jvm] Content open override fun isRunning(): Boolean isStarted [jvm] Content open override fun isStarted(): Boolean isStarting [jvm] Content open override fun isStarting(): Boolean isStopped [jvm] Content open override fun isStopped(): Boolean isStopping [jvm] Content open override fun isStopping(): Boolean join [jvm] Content open override fun join () removeEventListener [jvm] Content open override fun removeEventListener(p0: EventListener ): Boolean setEventListeners [jvm] Content open override fun setEventListeners(p0: MutableCollection < EventListener >) setFailed [jvm] Content open override fun setFailed(p0: Throwable ) setStarted [jvm] Content open override fun setStarted() setStarting [jvm] Content open override fun setStarting() setStopped [jvm] Content open override fun setStopped() setStopping [jvm] Content open override fun setStopping() start [jvm] Content override fun start() stop [jvm] Content override fun stop() toString [jvm] Content open override fun toString(): String Properties \u00b6 Name Summary _eventListener [jvm] override val _eventListener : MutableList < EventListener > _lock [jvm] override val _lock : Any _state [jvm] override val _state : AbstractLifeCycle.State","title":"Index"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/#loomthreadpool","text":"[jvm] class LoomThreadPool : AbstractLifeCycle, ThreadPool","title":"LoomThreadPool"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/#functions","text":"Name Summary addEventListener [jvm] Content open override fun addEventListener(p0: EventListener ): Boolean doStart [jvm] Content open override fun doStart() equals [jvm] Content open operator override fun equals (other: Any ?): Boolean execute [jvm] Content open override fun execute (cmd: Runnable ) getEventListeners [jvm] Content open override fun getEventListeners(): MutableList < EventListener > getIdleThreads [jvm] Content open override fun getIdleThreads (): Int getState [jvm] Content @ManagedAttribute (value = \u201cLifecycle State for this instance\u201d, readonly = true) open override fun getState(): String getThreads [jvm] Content open override fun getThreads (): Int hashCode [jvm] Content open override fun hashCode (): Int isFailed [jvm] Content open override fun isFailed(): Boolean isLowOnThreads [jvm] Content open override fun isLowOnThreads (): Boolean isRunning [jvm] Content open override fun isRunning(): Boolean isStarted [jvm] Content open override fun isStarted(): Boolean isStarting [jvm] Content open override fun isStarting(): Boolean isStopped [jvm] Content open override fun isStopped(): Boolean isStopping [jvm] Content open override fun isStopping(): Boolean join [jvm] Content open override fun join () removeEventListener [jvm] Content open override fun removeEventListener(p0: EventListener ): Boolean setEventListeners [jvm] Content open override fun setEventListeners(p0: MutableCollection < EventListener >) setFailed [jvm] Content open override fun setFailed(p0: Throwable ) setStarted [jvm] Content open override fun setStarted() setStarting [jvm] Content open override fun setStarting() setStopped [jvm] Content open override fun setStopped() setStopping [jvm] Content open override fun setStopping() start [jvm] Content override fun start() stop [jvm] Content override fun stop() toString [jvm] Content open override fun toString(): String","title":"Functions"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/#properties","text":"Name Summary _eventListener [jvm] override val _eventListener : MutableList < EventListener > _lock [jvm] override val _lock : Any _state [jvm] override val _state : AbstractLifeCycle.State","title":"Properties"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/-loom-thread-pool/","text":"// openjdk-latest / dev.suresh.loom.jetty / LoomThreadPool / LoomThreadPool LoomThreadPool \u00b6 [jvm] Content fun LoomThreadPool ()","title":" loom thread pool"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/-loom-thread-pool/#loomthreadpool","text":"[jvm] Content fun LoomThreadPool ()","title":"LoomThreadPool"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/execute/","text":"// openjdk-latest / dev.suresh.loom.jetty / LoomThreadPool / execute execute \u00b6 [jvm] Content open override fun execute (cmd: Runnable )","title":"Execute"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/execute/#execute","text":"[jvm] Content open override fun execute (cmd: Runnable )","title":"execute"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/get-idle-threads/","text":"// openjdk-latest / dev.suresh.loom.jetty / LoomThreadPool / getIdleThreads getIdleThreads \u00b6 [jvm] Content open override fun getIdleThreads (): Int","title":"Get idle threads"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/get-idle-threads/#getidlethreads","text":"[jvm] Content open override fun getIdleThreads (): Int","title":"getIdleThreads"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/get-threads/","text":"// openjdk-latest / dev.suresh.loom.jetty / LoomThreadPool / getThreads getThreads \u00b6 [jvm] Content open override fun getThreads (): Int","title":"Get threads"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/get-threads/#getthreads","text":"[jvm] Content open override fun getThreads (): Int","title":"getThreads"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/is-low-on-threads/","text":"// openjdk-latest / dev.suresh.loom.jetty / LoomThreadPool / isLowOnThreads isLowOnThreads \u00b6 [jvm] Content open override fun isLowOnThreads (): Boolean","title":"Is low on threads"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/is-low-on-threads/#islowonthreads","text":"[jvm] Content open override fun isLowOnThreads (): Boolean","title":"isLowOnThreads"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/join/","text":"// openjdk-latest / dev.suresh.loom.jetty / LoomThreadPool / join join \u00b6 [jvm] Content open override fun join ()","title":"Join"},{"location":"dev.suresh.loom.jetty/-loom-thread-pool/join/#join","text":"[jvm] Content open override fun join ()","title":"join"},{"location":"dev.suresh.misc/","text":"// openjdk-latest / dev.suresh.misc Package dev.suresh.misc \u00b6 Types \u00b6 Name Summary Empty [jvm] Content object Empty : Tree < Nothing > Node [jvm] Content data class Node < T >( value : T , right : Tree < T >, left : Tree < T >) : Tree < T > Node1 [jvm] Content data class Node1 < T >( data : T , left : Node1 < T >?, right : Node1 < T >?) Tree [jvm] Content sealed class Tree < T > Functions \u00b6 Name Summary depth [jvm] Content fun < T > Tree < T >. depth (): Int main1 [jvm] Content fun main1 () main2 [jvm] Content fun main2 () sum [jvm] Content fun < T : Number > Tree < T >. sum (): Long Properties \u00b6 Name Summary depth [jvm] val < T > Node1 < T >?. depth : Int","title":"Index"},{"location":"dev.suresh.misc/#package-devsureshmisc","text":"","title":"Package dev.suresh.misc"},{"location":"dev.suresh.misc/#types","text":"Name Summary Empty [jvm] Content object Empty : Tree < Nothing > Node [jvm] Content data class Node < T >( value : T , right : Tree < T >, left : Tree < T >) : Tree < T > Node1 [jvm] Content data class Node1 < T >( data : T , left : Node1 < T >?, right : Node1 < T >?) Tree [jvm] Content sealed class Tree < T >","title":"Types"},{"location":"dev.suresh.misc/#functions","text":"Name Summary depth [jvm] Content fun < T > Tree < T >. depth (): Int main1 [jvm] Content fun main1 () main2 [jvm] Content fun main2 () sum [jvm] Content fun < T : Number > Tree < T >. sum (): Long","title":"Functions"},{"location":"dev.suresh.misc/#properties","text":"Name Summary depth [jvm] val < T > Node1 < T >?. depth : Int","title":"Properties"},{"location":"dev.suresh.misc/depth/","text":"// openjdk-latest / dev.suresh.misc / depth depth \u00b6 [jvm] Content fun < T > Tree < T >. depth (): Int","title":"Depth"},{"location":"dev.suresh.misc/depth/#depth","text":"[jvm] Content fun < T > Tree < T >. depth (): Int","title":"depth"},{"location":"dev.suresh.misc/main1/","text":"// openjdk-latest / dev.suresh.misc / main1 main1 \u00b6 [jvm] Content fun main1 ()","title":"Main1"},{"location":"dev.suresh.misc/main1/#main1","text":"[jvm] Content fun main1 ()","title":"main1"},{"location":"dev.suresh.misc/main2/","text":"// openjdk-latest / dev.suresh.misc / main2 main2 \u00b6 [jvm] Content fun main2 ()","title":"Main2"},{"location":"dev.suresh.misc/main2/#main2","text":"[jvm] Content fun main2 ()","title":"main2"},{"location":"dev.suresh.misc/sum/","text":"// openjdk-latest / dev.suresh.misc / sum sum \u00b6 [jvm] Content fun < T : Number > Tree < T >. sum (): Long","title":"Sum"},{"location":"dev.suresh.misc/sum/#sum","text":"[jvm] Content fun < T : Number > Tree < T >. sum (): Long","title":"sum"},{"location":"dev.suresh.misc/-empty/","text":"// openjdk-latest / dev.suresh.misc / Empty Empty \u00b6 [jvm] object Empty : Tree < Nothing > Functions \u00b6 Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String","title":"Index"},{"location":"dev.suresh.misc/-empty/#empty","text":"[jvm] object Empty : Tree < Nothing >","title":"Empty"},{"location":"dev.suresh.misc/-empty/#functions","text":"Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String","title":"Functions"},{"location":"dev.suresh.misc/-empty/to-string/","text":"// openjdk-latest / dev.suresh.misc / Empty / toString toString \u00b6 [jvm] Content open override fun toString (): String","title":"To string"},{"location":"dev.suresh.misc/-empty/to-string/#tostring","text":"[jvm] Content open override fun toString (): String","title":"toString"},{"location":"dev.suresh.misc/-node/","text":"// openjdk-latest / dev.suresh.misc / Node Node \u00b6 [jvm] data class Node < T >( value : T , right : Tree < T >, left : Tree < T >) : Tree < T > Functions \u00b6 Name Summary component1 [jvm] Content operator fun component1 (): T component2 [jvm] Content operator fun component2 (): Tree < T > component3 [jvm] Content operator fun component3 (): Tree < T > copy [jvm] Content fun copy (value: T , right: Tree < T >, left: Tree < T >): Node < T > equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String Properties \u00b6 Name Summary left [jvm] val left : Tree < T > right [jvm] val right : Tree < T > value [jvm] val value : T","title":"Index"},{"location":"dev.suresh.misc/-node/#node","text":"[jvm] data class Node < T >( value : T , right : Tree < T >, left : Tree < T >) : Tree < T >","title":"Node"},{"location":"dev.suresh.misc/-node/#functions","text":"Name Summary component1 [jvm] Content operator fun component1 (): T component2 [jvm] Content operator fun component2 (): Tree < T > component3 [jvm] Content operator fun component3 (): Tree < T > copy [jvm] Content fun copy (value: T , right: Tree < T >, left: Tree < T >): Node < T > equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String","title":"Functions"},{"location":"dev.suresh.misc/-node/#properties","text":"Name Summary left [jvm] val left : Tree < T > right [jvm] val right : Tree < T > value [jvm] val value : T","title":"Properties"},{"location":"dev.suresh.misc/-node/-node/","text":"// openjdk-latest / dev.suresh.misc / Node / Node Node \u00b6 [jvm] Content fun < T > Node (value: T , right: Tree < T >, left: Tree < T >)","title":" node"},{"location":"dev.suresh.misc/-node/-node/#node","text":"[jvm] Content fun < T > Node (value: T , right: Tree < T >, left: Tree < T >)","title":"Node"},{"location":"dev.suresh.misc/-node/component1/","text":"// openjdk-latest / dev.suresh.misc / Node / component1 component1 \u00b6 [jvm] Content operator fun component1 (): T","title":"Component1"},{"location":"dev.suresh.misc/-node/component1/#component1","text":"[jvm] Content operator fun component1 (): T","title":"component1"},{"location":"dev.suresh.misc/-node/component2/","text":"// openjdk-latest / dev.suresh.misc / Node / component2 component2 \u00b6 [jvm] Content operator fun component2 (): Tree < T >","title":"Component2"},{"location":"dev.suresh.misc/-node/component2/#component2","text":"[jvm] Content operator fun component2 (): Tree < T >","title":"component2"},{"location":"dev.suresh.misc/-node/component3/","text":"// openjdk-latest / dev.suresh.misc / Node / component3 component3 \u00b6 [jvm] Content operator fun component3 (): Tree < T >","title":"Component3"},{"location":"dev.suresh.misc/-node/component3/#component3","text":"[jvm] Content operator fun component3 (): Tree < T >","title":"component3"},{"location":"dev.suresh.misc/-node/copy/","text":"// openjdk-latest / dev.suresh.misc / Node / copy copy \u00b6 [jvm] Content fun copy (value: T , right: Tree < T >, left: Tree < T >): Node < T >","title":"Copy"},{"location":"dev.suresh.misc/-node/copy/#copy","text":"[jvm] Content fun copy (value: T , right: Tree < T >, left: Tree < T >): Node < T >","title":"copy"},{"location":"dev.suresh.misc/-node1/","text":"// openjdk-latest / dev.suresh.misc / Node1 Node1 \u00b6 [jvm] data class Node1 < T >( data : T , left : Node1 < T >?, right : Node1 < T >?) Functions \u00b6 Name Summary component1 [jvm] Content operator fun component1 (): T component2 [jvm] Content operator fun component2 (): Node1 < T >? component3 [jvm] Content operator fun component3 (): Node1 < T >? copy [jvm] Content fun copy (data: T , left: Node1 < T >?, right: Node1 < T >?): Node1 < T > equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String Properties \u00b6 Name Summary data [jvm] val data : T left [jvm] val left : Node1 < T >? right [jvm] val right : Node1 < T >? Extensions \u00b6 Name Summary depth [jvm] Content val < T > Node1 < T >?. depth : Int","title":"Index"},{"location":"dev.suresh.misc/-node1/#node1","text":"[jvm] data class Node1 < T >( data : T , left : Node1 < T >?, right : Node1 < T >?)","title":"Node1"},{"location":"dev.suresh.misc/-node1/#functions","text":"Name Summary component1 [jvm] Content operator fun component1 (): T component2 [jvm] Content operator fun component2 (): Node1 < T >? component3 [jvm] Content operator fun component3 (): Node1 < T >? copy [jvm] Content fun copy (data: T , left: Node1 < T >?, right: Node1 < T >?): Node1 < T > equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String","title":"Functions"},{"location":"dev.suresh.misc/-node1/#properties","text":"Name Summary data [jvm] val data : T left [jvm] val left : Node1 < T >? right [jvm] val right : Node1 < T >?","title":"Properties"},{"location":"dev.suresh.misc/-node1/#extensions","text":"Name Summary depth [jvm] Content val < T > Node1 < T >?. depth : Int","title":"Extensions"},{"location":"dev.suresh.misc/-node1/-node1/","text":"// openjdk-latest / dev.suresh.misc / Node1 / Node1 Node1 \u00b6 [jvm] Content fun < T > Node1 (data: T , left: Node1 < T >?, right: Node1 < T >?)","title":" node1"},{"location":"dev.suresh.misc/-node1/-node1/#node1","text":"[jvm] Content fun < T > Node1 (data: T , left: Node1 < T >?, right: Node1 < T >?)","title":"Node1"},{"location":"dev.suresh.misc/-node1/component1/","text":"// openjdk-latest / dev.suresh.misc / Node1 / component1 component1 \u00b6 [jvm] Content operator fun component1 (): T","title":"Component1"},{"location":"dev.suresh.misc/-node1/component1/#component1","text":"[jvm] Content operator fun component1 (): T","title":"component1"},{"location":"dev.suresh.misc/-node1/component2/","text":"// openjdk-latest / dev.suresh.misc / Node1 / component2 component2 \u00b6 [jvm] Content operator fun component2 (): Node1 < T >?","title":"Component2"},{"location":"dev.suresh.misc/-node1/component2/#component2","text":"[jvm] Content operator fun component2 (): Node1 < T >?","title":"component2"},{"location":"dev.suresh.misc/-node1/component3/","text":"// openjdk-latest / dev.suresh.misc / Node1 / component3 component3 \u00b6 [jvm] Content operator fun component3 (): Node1 < T >?","title":"Component3"},{"location":"dev.suresh.misc/-node1/component3/#component3","text":"[jvm] Content operator fun component3 (): Node1 < T >?","title":"component3"},{"location":"dev.suresh.misc/-node1/copy/","text":"// openjdk-latest / dev.suresh.misc / Node1 / copy copy \u00b6 [jvm] Content fun copy (data: T , left: Node1 < T >?, right: Node1 < T >?): Node1 < T >","title":"Copy"},{"location":"dev.suresh.misc/-node1/copy/#copy","text":"[jvm] Content fun copy (data: T , left: Node1 < T >?, right: Node1 < T >?): Node1 < T >","title":"copy"},{"location":"dev.suresh.misc/-tree/","text":"// openjdk-latest / dev.suresh.misc / Tree Tree \u00b6 [jvm] sealed class Tree < T > Functions \u00b6 Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String Inheritors \u00b6 Name Empty Node Extensions \u00b6 Name Summary depth [jvm] Content fun < T > Tree < T >. depth (): Int sum [jvm] Content fun < T : Number > Tree < T >. sum (): Long","title":"Index"},{"location":"dev.suresh.misc/-tree/#tree","text":"[jvm] sealed class Tree < T >","title":"Tree"},{"location":"dev.suresh.misc/-tree/#functions","text":"Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int toString [jvm] Content open override fun toString (): String","title":"Functions"},{"location":"dev.suresh.misc/-tree/#inheritors","text":"Name Empty Node","title":"Inheritors"},{"location":"dev.suresh.misc/-tree/#extensions","text":"Name Summary depth [jvm] Content fun < T > Tree < T >. depth (): Int sum [jvm] Content fun < T : Number > Tree < T >. sum (): Long","title":"Extensions"},{"location":"dev.suresh.mvn/","text":"// openjdk-latest / dev.suresh.mvn Package dev.suresh.mvn \u00b6 Types \u00b6 Name Summary MavenResolver [jvm] Brief description https://github.com/apache/maven-resolver/tree/master/maven-resolver-demos/maven-resolver-demo-snippets https://github.com/apache/maven/tree/master/maven-resolver-provider https://github.com/shrinkwrap/resolver https://blog.sonatype.com/2011/06/you-dont-need-a-browser-to-use-maven-central/ Dep - implementation(\u201corg.jboss.shrinkwrap.resolver:shrinkwrap-resolver-depchain:3.1.3\u201d) Content class MavenResolver","title":"Index"},{"location":"dev.suresh.mvn/#package-devsureshmvn","text":"","title":"Package dev.suresh.mvn"},{"location":"dev.suresh.mvn/#types","text":"Name Summary MavenResolver [jvm] Brief description https://github.com/apache/maven-resolver/tree/master/maven-resolver-demos/maven-resolver-demo-snippets https://github.com/apache/maven/tree/master/maven-resolver-provider https://github.com/shrinkwrap/resolver https://blog.sonatype.com/2011/06/you-dont-need-a-browser-to-use-maven-central/ Dep - implementation(\u201corg.jboss.shrinkwrap.resolver:shrinkwrap-resolver-depchain:3.1.3\u201d) Content class MavenResolver","title":"Types"},{"location":"dev.suresh.mvn/-maven-resolver/","text":"// openjdk-latest / dev.suresh.mvn / MavenResolver MavenResolver \u00b6 [jvm] https://github.com/apache/maven-resolver/tree/master/maven-resolver-demos/maven-resolver-demo-snippets https://github.com/apache/maven/tree/master/maven-resolver-provider https://github.com/shrinkwrap/resolver https://blog.sonatype.com/2011/06/you-dont-need-a-browser-to-use-maven-central/ Dep - implementation(\u201corg.jboss.shrinkwrap.resolver:shrinkwrap-resolver-depchain:3.1.3\u201d) class MavenResolver Constructors \u00b6 Name Summary MavenResolver [jvm] fun MavenResolver () Functions \u00b6 Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int run [jvm] Content fun run () toString [jvm] Content open override fun toString (): String","title":"Index"},{"location":"dev.suresh.mvn/-maven-resolver/#mavenresolver","text":"[jvm] https://github.com/apache/maven-resolver/tree/master/maven-resolver-demos/maven-resolver-demo-snippets https://github.com/apache/maven/tree/master/maven-resolver-provider https://github.com/shrinkwrap/resolver https://blog.sonatype.com/2011/06/you-dont-need-a-browser-to-use-maven-central/ Dep - implementation(\u201corg.jboss.shrinkwrap.resolver:shrinkwrap-resolver-depchain:3.1.3\u201d) class MavenResolver","title":"MavenResolver"},{"location":"dev.suresh.mvn/-maven-resolver/#constructors","text":"Name Summary MavenResolver [jvm] fun MavenResolver ()","title":"Constructors"},{"location":"dev.suresh.mvn/-maven-resolver/#functions","text":"Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int run [jvm] Content fun run () toString [jvm] Content open override fun toString (): String","title":"Functions"},{"location":"dev.suresh.mvn/-maven-resolver/-maven-resolver/","text":"// openjdk-latest / dev.suresh.mvn / MavenResolver / MavenResolver MavenResolver \u00b6 [jvm] Content fun MavenResolver ()","title":" maven resolver"},{"location":"dev.suresh.mvn/-maven-resolver/-maven-resolver/#mavenresolver","text":"[jvm] Content fun MavenResolver ()","title":"MavenResolver"},{"location":"dev.suresh.mvn/-maven-resolver/run/","text":"// openjdk-latest / dev.suresh.mvn / MavenResolver / run run \u00b6 [jvm] Content fun run ()","title":"Run"},{"location":"dev.suresh.mvn/-maven-resolver/run/#run","text":"[jvm] Content fun run ()","title":"run"},{"location":"dev.suresh.server/","text":"// openjdk-latest / dev.suresh.server Package dev.suresh.server \u00b6 Types \u00b6 Name Summary DevServer [jvm] Brief description More OKHttp samples can found in this repo Content class DevServer","title":"Index"},{"location":"dev.suresh.server/#package-devsureshserver","text":"","title":"Package dev.suresh.server"},{"location":"dev.suresh.server/#types","text":"Name Summary DevServer [jvm] Brief description More OKHttp samples can found in this repo Content class DevServer","title":"Types"},{"location":"dev.suresh.server/-dev-server/","text":"// openjdk-latest / dev.suresh.server / DevServer DevServer \u00b6 [jvm] More OKHttp samples can found in this repo class DevServer Constructors \u00b6 Name Summary DevServer [jvm] fun DevServer () Functions \u00b6 Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int run [jvm] Brief description Enqueue a request, run a client and shutdown the server. Content fun run () toString [jvm] Content open override fun toString (): String Properties \u00b6 Name Summary client [jvm] val client : OkHttpClient clientCerts [jvm] val clientCerts : HandshakeCertificates selfSignedCert [jvm] Generate a self-signed cert for the server to serve and the client to trust. val selfSignedCert : HandshakeCertificates server [jvm] Start the HTTPS server with a self signed cert. val server : MockWebServer","title":"Index"},{"location":"dev.suresh.server/-dev-server/#devserver","text":"[jvm] More OKHttp samples can found in this repo class DevServer","title":"DevServer"},{"location":"dev.suresh.server/-dev-server/#constructors","text":"Name Summary DevServer [jvm] fun DevServer ()","title":"Constructors"},{"location":"dev.suresh.server/-dev-server/#functions","text":"Name Summary equals [jvm] Content open operator override fun equals (other: Any ?): Boolean hashCode [jvm] Content open override fun hashCode (): Int run [jvm] Brief description Enqueue a request, run a client and shutdown the server. Content fun run () toString [jvm] Content open override fun toString (): String","title":"Functions"},{"location":"dev.suresh.server/-dev-server/#properties","text":"Name Summary client [jvm] val client : OkHttpClient clientCerts [jvm] val clientCerts : HandshakeCertificates selfSignedCert [jvm] Generate a self-signed cert for the server to serve and the client to trust. val selfSignedCert : HandshakeCertificates server [jvm] Start the HTTPS server with a self signed cert. val server : MockWebServer","title":"Properties"},{"location":"dev.suresh.server/-dev-server/-dev-server/","text":"// openjdk-latest / dev.suresh.server / DevServer / DevServer DevServer \u00b6 [jvm] Content fun DevServer ()","title":" dev server"},{"location":"dev.suresh.server/-dev-server/-dev-server/#devserver","text":"[jvm] Content fun DevServer ()","title":"DevServer"},{"location":"dev.suresh.server/-dev-server/run/","text":"// openjdk-latest / dev.suresh.server / DevServer / run run \u00b6 [jvm] Brief description Enqueue a request, run a client and shutdown the server. Content fun run ()","title":"Run"},{"location":"dev.suresh.server/-dev-server/run/#run","text":"[jvm] Brief description Enqueue a request, run a client and shutdown the server. Content fun run ()","title":"run"}]}